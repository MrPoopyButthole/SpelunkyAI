<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sGameMakerLogoS</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>sc=0.25
image_xscale=sc
image_yscale=sc

x=room_width/2
y=room_height*0.45

cogbit[0]=sGameMakerLogoCog3
cogbit[1]=sGameMakerLogoCog4
cogbit[2]=sGameMakerLogoCog1
cogbit[3]=sGameMakerLogoCog2

alarm[0]=floor(room_speed/3)
alarm[10]=floor(room_speed*2.5) //LOOPER


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>room_goto_next()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//
instance_create(x,y+floor(room_height*0.21),oGameMakerLogoMadeWith)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>background_xscale[0]=room_width/960
background_yscale[0]=room_height/720

var aladj=alarm[0]*(60/room_speed)

draw_background_stretched(bGameMakerIntroBack,0,0,room_width,room_height)

with(oGameMakerLogoPoof) draw_self()

if aladj&gt;=0
{
    sc=0.1+(power(aladj,0.5)*0.06)
    
    image_alpha=power(1-(aladj/20),3)
    image_angle=aladj*2
    
    image_xscale=sc
    image_yscale=sc
    
    if aladj&lt;room_speed/5 &amp;&amp; !instance_exists(oGameMakerLogoPoof) instance_create(x,y,oGameMakerLogoPoof)
    
    for(i=0;i&lt;=3;i++)
    {
        draw_sprite_ext(/*cogbit[i]*/sGameMakerLogoCog3,0,
                  /*x*/ x+lengthdir_x(power(aladj,0.5)*60,(i*90)-(75*(aladj/20))),
                  /*y*/ y+lengthdir_y(power(aladj,0.5)*60,(i*90)-(75*(aladj/20))),
             /*xscale*/ sc,
             /*yscale*/ sc,
                /*rot*/ (i*90)-(aladj*2),
             /*colour*/ c_white,
              /*alpha*/ image_alpha)
    }
    
    draw_self()
}

else
{
    sc=lerp(sc,0.135,gmitf(0.07)) //min(sc+gmitf(0.001),0.135)
    
    image_alpha=1
    image_angle=aladj*2
    
    image_xscale=sc
    image_yscale=sc
    
    for(i=0;i&lt;=3;i++)
    {
        draw_sprite_ext(cogbit[i],0,x,y,sc,sc,0,c_white,1)
    }
    
    draw_self()    
}

x=room_width/2
y=room_height*0.45
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
