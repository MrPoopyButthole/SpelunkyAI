<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sShopLeft</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>60</depth>
  <persistent>0</persistent>
  <parentName>oEnemy</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>makeActive();
setCollisionBounds(2, 0, sprite_width-2, sprite_height);
xVel = 0;
image_speed = 0.5;
myGrav = 0.6;

// stats
type = "Shopkeeper";
style = "General";
hp = 20;
invincible = 0;
favor = 12;

IDLE = 0;
WALK = 1;
ATTACK = 2;
THROW = 3;
PATROL = 4;
FOLLOW = 5;
STUNNED = 98;
DEAD = 99;
status = 0;

whipped = false;
bounced = false;
dead = false;
counter = 0;
sightCounter = 0;
turnTimer = 0;
throwCount = 0;
stunTime = 5;

betValue = 1000 + global.currLevel * 500;

LEFT = 0;
RIGHT = 1;
facing = LEFT;

shakeCounter = 0;
shakeToggle = 1;

welcomed = false;
angered = false;

hasGun = true;
firing = 0;
firingMax = 30;</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>whipped = false;</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if ((x &gt; view_xview[0]-20 and x &lt; view_xview[0]+view_wview[0]+4 and
     y &gt; view_yview[0]-20 and y &lt; view_yview[0]+view_hview[0]+4))
{
moveTo(xVel,yVel);

if (not held) yVel += myGrav;
if (yVel &gt; 8) yVel = 8;

colLeft = false;
colRight = false;
colBot = false;
colTop = false;
if (isCollisionLeft(1)) colLeft = true;
if (isCollisionRight(1)) colRight = true;
if (isCollisionBottom(1)) colBot = true;
if (isCollisionTop(1)) colTop = true;

if (colBot and status != STUNNED) yVel = 0;

if (throwCount &gt; 0) throwCount -= 1;

// crushed
if (status &gt;= STUNNED)
{
    if (collision_point(x+8, y+12, oSolid, 0, 0))
    {
        scrCreateBlood(x+8, y+8, 3);
        playSound(global.sndCavemanDie);
        if (hp &gt; 0)
        {
            if (isRealLevel()) global.enemyKills[19] += 1;
            global.shopkeepers += 1;
            global.kills += 1;
        }
        global.murderer = true;
        instance_destroy();
    }
}
else if (not held and collision_point(x+8, y+8, oSolid, 0, 0))
{
    scrCreateBlood(x+8, y+8, 3);
    playSound(global.sndCavemanDie);
    if (hp &gt; 0)
    {
        if (isRealLevel()) global.enemyKills[19] += 1;
        global.shopkeepers += 1;
        global.kills += 1;
    }
    global.murderer = true;
    if (hasGun)
    {
        obj = instance_create(x+8, y+8, oShotgun);
        obj.yVel = rand(4,6);
        if (xVel &lt; 0) obj.xVel = -1 * rand(4,6);
        else obj.xVel = rand(4,6);
        obj.cost = 0;
        obj.forSale = false;
        hasGun = false;
    }
    instance_destroy();
}

if (status != DEAD and status != STUNNED and hp &lt; 1)
{
    status = DEAD;
}

dist = distance_to_object(oPlayer1);    

if (status == IDLE or status == FOLLOW)
{
    if (oPlayer1.holdItem &gt; 0)
    {
        item = oPlayer1.holdItem;
        if (item.cost &gt; 0)
        {
            global.message = item.buyMessage;
            if (global.gamepadOn) global.message2 = "PRESS " + scrGetJoy(global.joyPayVal) + " TO PURCHASE.";
            else global.message2 = "PRESS " + scrGetKey(global.keyPayVal) + " TO PURCHASE.";
            global.messageTimer = 200;
        }
    }
}

if ((status == PATROL or status == WALK))
{
    if (not oPlayer1.dead and distance_to_object(oPlayer1) &lt; 64 and oPlayer1.y - (y+8) &lt; 16)
    {
        status = ATTACK;
    }
    else if (abs(oPlayer1.x-(x+8)) &lt; 4)
    {
        status = ATTACK;
    }
}

if (status == IDLE)
{
    bounced = false;
    
    if (colLeft)
    {
        x += 1;
    }
    if (colRight)
    {
        x -= 1;
    }
    if (colLeft and colRight) status = ATTACK;
    
    if (oPlayer1.x &lt; x+8) facing = LEFT;
    else facing = RIGHT;
    
    if (yVel &lt; 0 and colTop)
    {
        yVel = 0;
    }
    
    if (global.murderer or global.thiefLevel &gt; 0)
    {
        status = PATROL;
    }
    else if (not welcomed and (scrGetRoomX(oPlayer1.x) == scrGetRoomX(x) and scrGetRoomY(oPlayer1.y) == scrGetRoomY(y)))
    {
        if (style == "Bomb") global.message = "WELCOME TO " + scrGetName() + "'S BOMB SHOP!";
        else if (style == "Weapon") global.message = "WELCOME TO " + scrGetName() + "'S ARMORY!";
        else if (style == "Clothing") global.message = "WELCOME TO " + scrGetName() + "'S CLOTHING SHOP!";
        else if (style == "Rare") global.message = "WELCOME TO " + scrGetName() + "'S SPECIALTY SHOP!";
        else if (style == "Craps") global.message = "WELCOME TO " + scrGetName() + "'S DICE HOUSE!";
        else if (style == "Kissing") global.message = "WELCOME TO " + scrGetName() + "'S KISSING PARLOR!";
        else if (style == "Ankh") global.message = "I HAVE SOMETHING SPECIAL...";
        else global.message = "WELCOME TO " + scrGetName() + "'S SUPPLY SHOP!";
        if (style == "Craps")
        {
            if (global.gamepadOn) global.message2 = "PRESS " + scrGetJoy(global.joyPayVal) + " TO BET $" + string(betValue) + ".";
            else global.message2 = "PRESS " + scrGetKey(global.keyPayVal) + " TO BET $" + string(betValue) + ".";
        }
        else if (style == "Kissing")
        {
            if (global.gamepadOn) global.message2 = "$" + string(getKissValue()) + " A KISS. PRESS " + scrGetJoy(global.joyPayVal) + ".";
            else global.message2 = "$" + string(getKissValue()) + " A KISS. PRESS " + scrGetKey(global.keyPayVal) + ".";
        }
        else global.message2 = "";
        global.messageTimer = 200;
        welcomed = true;
    }
    
    ///////////////
    // CRAPS
    ///////////////
    
    if (style == "Craps")
    {
        global.diceRolled = true;
        global.diceValue = 0;
        if (instance_number(oDice) == 2 and oPlayer1.bet &gt; 0)
        {
            with oDice
            {
                if (not rolled) global.diceRolled = false;
                global.diceValue += value;
            }
        }
        else
        {
            global.diceRolled = false;
        }
        
        if (global.diceRolled)
        {
            if (global.diceValue == 7)
            {
                if (isRealLevel()) global.diceGamesWon += 1;
                global.message = "YOU ROLLED A SEVEN!";
                global.message2 = "YOU WIN A PRIZE!";
                global.messageTimer = 200;
                oPlayer1.bet = 0;
                with oItem
                {
                    if (inDiceHouse)
                    {
                        obj = instance_create(x-4, y+6, oPoof);
                        obj.xVel = -0.4;
                        obj = instance_create(x+4, y+6, oPoof);
                        obj.xVel = 0.4;
                        scrGenerateItem(x, y, 1);
                        obj.inDiceHouse = true;
                        if (oPlayer1.x &lt; x) x -= 32;
                        else x += 32;
                        obj = instance_create(x-4, y+6, oPoof);
                        obj.xVel = -0.4;
                        obj = instance_create(x+4, y+6, oPoof);
                        obj.xVel = 0.4;
                        cost = 0;
                        forSale = false;
                        inDiceHouse = false;
                    }
                }
            }
            else if (global.diceValue &gt; 7)
            {
                if (isRealLevel()) global.diceGamesWon += 1;
                global.message = "YOU ROLLED A " + string(global.diceValue) + "!";
                global.message2 = "CONGRATULATIONS! YOU WIN!";
                global.messageTimer = 200;
                global.collect += oPlayer1.bet * 2;
                global.collectCounter += 20;
                if (global.collectCounter &gt; 100) global.collectCounter = 100;
                oPlayer1.bet = 0;
            }
            else if (global.diceValue &lt; 7)
            {
                if (isRealLevel()) global.diceGamesLost += 1;
                global.message = "YOU ROLLED A " + string(global.diceValue) + "!";
                global.message2 = "I'M SORRY, BUT YOU LOSE!";
                global.messageTimer = 200;
                oPlayer1.bet = 0;
            }
            global.diceRolled = false;
            with oDice { rolled = false; }
        }
    }
    else if (oPlayer1.holdItem &gt; 0)
    {
        obj = oPlayer1.holdItem;
        if (obj.cost &gt; 0)
        {
            if (scrGetRoomX(oPlayer1.x) == scrGetRoomX(x) and scrGetRoomY(oPlayer1.y) == scrGetRoomY(y))
            {
                status = FOLLOW;
            }
        }
    }
}
else if (status == FOLLOW)
{
    image_speed = 0.5;
    
    if (isCollisionLeft(1) or isCollisionRight(1))
    {
        if (facing == LEFT) facing = RIGHT;
        else facing = LEFT;
    }
    
    if (turnTimer &gt; 0) turnTimer -= 1;
    else if (abs(oPlayer1.y - (y+8)) &lt; 8 and isCollisionBottom(1) and dist &gt; 16)
    {
        if (oPlayer1.x &lt; x) facing = LEFT;
        else facing = RIGHT;
        turnTimer = 10;
    }
    
    i = dist/16 * 1.5;
    if (facing == LEFT)
    {
        xVel = -i;
    }
    else
    {
        xVel = i;
    }

    if (xVel &lt; -3) xVel = -3;
    if (xVel &gt; 3) xVel = 3;
    
    if (dist &lt; 12 or oPlayer1.y &lt; y) xVel = 0;
    
    if (oPlayer1.holdItem != 0)
    {
        obj = oPlayer1.holdItem;
        if (obj == 0 or obj.cost == 0)
        {
            status = IDLE;
        }
    }
    else
    {
        status = IDLE;
    }
}
else if (status == PATROL)
{
    bounced = false;
    
    if (yVel &lt; 0 and isCollisionTop(1))
    {
        yVel = 0;
    }

    if (colBot and counter &gt; 0) counter -= 1;    
    if (counter &lt; 1)
    {
        facing = rand(0,1);
        status = WALK;
    }
}
else if (status == WALK)
{
    image_speed = 0.5;

    if (isCollisionLeft(1) or isCollisionRight(1))
    {
        if (facing == LEFT) facing = RIGHT;
        else facing = LEFT;
    }
    
    if (facing == LEFT)
    {
        if (not collision_point(x-1, y, oSolid, -1, -1))
        {
            status = PATROL;
            counter = rand(20,50);
            xVel = 0;
        }
        xVel = -1.5;
    }
    else
    {
        if (not collision_point(x+16, y, oSolid, -1, -1))
        {
            status = PATROL;
            counter = rand(20,50);
            xVel = 0;
        }
        xVel = 1.5;
    }
    
    if (rand(1,100) == 1)
    {
        status = PATROL;
        counter = rand(20,50);
        xVel = 0;
    }
}
else if (status == ATTACK)
{
    image_speed = 1;
    
    if (not angered)
    {
        with oItem
        {
            cost = 0;
            forSale = false;
        }
        angered = true;
    }
    
    if (turnTimer &gt; 0) turnTimer -= 1;
    else if (abs(oPlayer1.y - (y+8)) &lt; 8 and isCollisionBottom(1) and dist &gt; 16)
    {
        if (oPlayer1.x &lt; x) facing = LEFT;
        else facing = RIGHT;
        turnTimer = 20;
    }
    
    if (isCollisionLeft(1) or isCollisionRight(1))
    {
        if (facing == LEFT) facing = RIGHT;
        else facing = LEFT;
    }
    
    if (facing == LEFT) xVel = -3;
    else xVel = 3;
    
    if (hasGun)
    {
        if (firing &gt; 0) firing -= 1;
        else if (abs(oPlayer1.y - (y+8)) &lt; 32)
        {
            if (facing == LEFT and oPlayer1.x &lt; x+8 and dist &lt; 96)
            {
                instance_create(x, y+9, oShotgunBlastLeft);
                for (i = 0; i &lt; 6; i+= 1)
                {
                    obj = instance_create(x+4, y+8, oBullet);
                    obj.xVel = (-1 * rand(6,8)) + xVel;
                    if (obj.xVel &gt;= -6) obj.xVel = -6;
                    obj.yVel = random(1) - random(1);
                    obj.safe = true;
                    with obj { if (collision_point(x, y, oSolid, 0, 0)) instance_destroy(); }
                }
                yVel -= 1;
                xVel += 3;
                playSound(global.sndShotgun);
                firing = firingMax;
            }
            if (facing == RIGHT and oPlayer1.x &gt; x+8 and dist &lt; 96)
            {
                instance_create(x+16, y+9, oShotgunBlastRight);
                for (i = 0; i &lt; 6; i+= 1)
                {
                    obj = instance_create(x+12, y+8, oBullet);
                    obj.xVel = rand(6,8) + xVel;
                    if (obj.xVel &lt; 6) obj.xVel = 6;
                    obj.yVel = random(1) - random(1);
                    obj.safe = true;
                    with obj { if (collision_point(x, y, oSolid, 0, 0)) instance_destroy(); }
                }
                yVel -= 1;
                xVel -= 3;
                playSound(global.sndShotgun);
                firing = firingMax;
            }
        }
    }
    
    // jump
    if (oPlayer1.y &gt; y and abs(oPlayer1.x - (x+8)) &lt; 64)
    {
        // do nothing
    }
    else if ((facing == LEFT and collision_point(x-16, y, oSolid, -1, -1)) or
        (facing == RIGHT and collision_point(x+32, y, oSolid, -1, -1)))
    {
        if (colBot and not isCollisionTop(4)) yVel = -1 * rand(7,8);
        /*
        else
        {
            if (facing == LEFT) xVel = -1.5;
            else xVel = 1.5;
        }
        */
    }
    else if (oPlayer1.y &lt;= y+16 and 
             ((facing == LEFT and not collision_point(x-16, y+16, oSolid, -1, -1)) or
             (facing == RIGHT and not collision_point(x+32, y+16, oSolid, -1, -1))))
    {
        if (colBot and not isCollisionTop(4)) yVel = -1 * rand(7,8);
    }
    
    if (not colBot and oPlayer1.y &gt; y+8)
    {
        if (facing == LEFT) xVel = -1.5;
        else xVel = 1.5;
    }
    
    if (oPlayer1.dead)
    {
        status = WALK;
    }
}
else if (status == STUNNED)
{
        if (colBot) sprite_index = sShopStunL;
        else if (bounced)
        {
            if (yVel &lt; 0) sprite_index = sShopBounceL;
            else sprite_index = sShopFallL;
        }
        else
        {
            if (xVel &lt; 0) sprite_index = sShopDieLL;
            else sprite_index = sShopDieLR;
        }
    
    if (colBot and not bounced)
    {
        bounced = true;
        scrCreateBlood(x+8, y+8, 3);
    }
    
    if (held or colBot)
    {      
        if (counter &gt; 0) counter -= 1;
        else if (hp &gt; 0)
        {
            status = ATTACK;
            if (held)
            {
                held = false;
                with oPlayer1 { holdItem = 0; pickupItemType = ""; }
            }
        }
    }
}
else if (status == DEAD)
{
    if (not dead)
    {
        if (isRoom("rStars"))
        {
            if (oStarsRoom.kills &lt; 99) oStarsRoom.kills += 1;
        }
        else
        {
            if (isRealLevel()) global.enemyKills[19] += 1;
            global.shopkeepers += 1;
            global.kills += 1;
            global.murderer = true;
            repeat(rand(1,4))
            {
                obj = instance_create(x+8, y+8, oGoldNugget);
                obj.yVel = -1;
                obj.xVel = rand(1,3)-rand(1,3);
            }
        }
        playSound(global.sndCavemanDie);
        
        dead = true;
    }

    sprite_index = sShopDieL;

    
    if (abs(xVel) &gt; 0 or abs(yVel) &gt; 0) status = STUNNED;
}

if (status &gt;= STUNNED)
{
    if (hasGun)
    {
        obj = instance_create(x+8, y+8, oShotgun);
        obj.yVel = rand(4,6);
        if (xVel &lt; 0) obj.xVel = -1 * rand(4,6);
        else obj.xVel = rand(4,6);
        obj.cost = 0;
        obj.forSale = false;
        hasGun = false;
    }

    scrCheckCollisions();
    
    if (xVel == 0 and yVel == 0 and hp &lt; 1) status = DEAD;
}

//if (isCollisionSolid()) y -= 2;

if (xVel &gt; 0) xVel -= 0.1;
if (xVel &lt; 0) xVel += 0.1;
if (abs(xVel) &lt; 0.5) xVel = 0;

if (status &lt; STUNNED and status != THROW)
{
    if (abs(xVel) &gt; 0) sprite_index = sShopRunLeft;
    else sprite_index = sShopLeft;
}
if (held)
{
        if (hp &gt; 0) sprite_index = sShopHeldL;
        else sprite_index = sShopDHeldL;
}
}</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="oWhipPre">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (not whipped)
{
    if (other.type == "Machete")
    {
        hp -= other.damage;
        if (bloodLeft &gt; 0)
        {
            scrCreateBlood(x+sprite_width/2, y+sprite_height/2, 1);
            if (hp &lt; 0) bloodLeft -= 1;
        }
    }
    yVel = -2;
    if (other.x &lt; x) xVel = 1;
    else xVel = -1;
    playSound(global.sndHit);
    whipped = true;
    alarm[0] = 10;
    status = ATTACK;
}</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="oWhip">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (not whipped)
{
    if (other.type == "Machete")
    {
        hp -= other.damage;
        if (bloodLeft &gt; 0)
        {
            scrCreateBlood(x+sprite_width/2, y+sprite_height/2, 1);
            if (hp &lt; 0) bloodLeft -= 1;
        }
    }
    yVel = -2;
    if (other.x &lt; x) xVel = 1;
    else xVel = -1;
    playSound(global.sndHit);
    whipped = true;
    alarm[0] = 10;
    status = ATTACK;
}</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="oShotgun">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (hp &gt; 0 and status == ATTACK and not hasGun)
{
    with other
    {
        if (held)
        {
            oPlayer1.holdItem = 0;
            oPlayer1.pickupItemType = "";
            held = false;
        }
        instance_destroy();
    }
    hasGun = true;
}</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="oCharacter">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (status == IDLE or status == FOLLOW or status == STUNNED or status == DEAD or hp &lt; 1 or other.dead or other.stunned or abs(other.x-(x+8)) &gt; 8)
{
    // do nothing
}
else if (not other.dead and not other.stunned and (other.state == 15 or other.state == 16) and other.y &lt; y+5 and not other.swimming)
{
    if (status &lt; STUNNED)
    {
        other.yVel=-6-0.2*other.yVel
        if (global.hasSpikeShoes) { hp -= (3 * ceil(other.fallTimer/16)); instance_create(other.x, other.y+8, oBlood); }
        else hp -= (1 * ceil(other.fallTimer/16));
        other.fallTimer = 0;
        status = STUNNED;
        counter = stunTime;
        yVel = -6;
        if (other.x &lt; x+8) xVel += 1;
        else xVel -= 1;
        image_speed = 0.5;
        playSound(global.sndHit);
    }
}
else if (other.invincible == 0 and status &lt; STUNNED)
{
    if (collision_point(x+8, y-4, oSolid, 0, 0))
    {
        other.blink = 30;
        other.invincible = 30;
        if (other.x &lt; x)
            other.xVel = -6;
        else
            other.xVel = 6;
        instance_create(other.x, other.y, oBlood);
    
        if (global.plife &gt; 0)
        {
            global.plife -= 1;
            if (global.plife &lt;= 0 and isRealLevel()) global.enemyDeaths[19] += 1;
        }
        playSound(global.sndHurt);
    }
    else if (status != THROW)
    {
        status = THROW;
        xVel = 0;
        if (other.x &gt; x+8)
        {
            facing = RIGHT;
            sprite_index = sShopThrowL;
            other.x = x;
            other.y = y;
            other.yVel = -6;
            other.xVel = 6;
        }
        else
        {
            facing = LEFT;
            sprite_index = sShopThrowL;
            other.x = x + 16;
            other.y = y;
            other.yVel = -6;
            other.xVel = -6;
        }
        
        other.stunned = true;
        other.bounced = false;
        other.wallHurt = 1;
        
        with other
        {
            if (holdItem)
            {
                if (holdItem.type == "Gold Idol") holdItem.y -= 8;
                scrDropItem(xVel, yVel);
            }
        }    
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (sprite_index == sShopThrowL)
{
    status = ATTACK;
    sprite_index = sShopLeft;
}</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (facing == RIGHT) draw_sprite_ext(sprite_index, image_index, x+16, y, -1, image_yscale, image_angle, image_blend, image_alpha);
else draw_sprite_ext(sprite_index, image_index, x, y, 1, image_yscale, image_angle, image_blend, image_alpha);
// draw_sprite_ext(sprite_index, image_index, x, y, 1, 1, 0, c_white, 1);
if (hasGun and status != IDLE and status != FOLLOW)
{
    if (facing == LEFT) draw_sprite_ext(sShotgunLeft, 0, x+6, y+10, 1, 1, 0, c_white, 1);
    else draw_sprite_ext(sShotgunRight, 0, x+10, y+10, 1, 1, 0, c_white, 1);
}</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
