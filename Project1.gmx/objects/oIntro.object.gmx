<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>fadeIn = false;
fadeOut = false;
fadeLevel = 1;
// instance_create(-32, 184, oPDummy3);

drawStatus = 0;
alarm[11] = 20;

str = "";
n = rand(1,8);
switch (n)
{
    case 1: { str1 = "AS THE MOON BURNED BRIGHT ABOVE,"; break; }
    case 2: { str1 = "WITH THE DESERT STRETCHING BEHIND ME,"; break; }
    case 3: { str1 = "AFTER I DOUBLE-CHECKED MY MAP,"; break; }
    case 4: { str1 = "MY LIPS CRACKED AND COVERED IN SAND,"; break; }
    case 5: { str1 = "WITH FATE GUIDING MY EVERY MOVE,"; break; }
    case 6: { str1 = "PUTTING THE FADED PHOTO IN MY POCKET,"; break; }
    case 7: { str1 = "AS I RECALLED MY FATHER'S LAST WORDS,"; break; }
    case 8: { str1 = "MY MEMORY SLIPPING AWAY FROM ME,"; break; }
}
n = rand(1,8);
switch (n)
{
    case 1: { str2 = "I STRODE VALIANTLY TOWARD MY DESTINY,"; break; }
    case 2: { str2 = "I SQUEEZED THE WHIP AT MY SIDE,"; break; }
    case 3: { str2 = "I DRAINED THE REST OF MY CANTEEN,"; break; }
    case 4: { str2 = "I SPOTTED THE CAVE'S ENTRANCE,"; break; }
    case 5: { str2 = "I FURROWED MY BROW,"; break; }
    case 6: { str2 = "I PAID MY BEDOUIN GUIDE,"; break; }
    case 7: { str2 = "I DISMOUNTED MY CAMEL,"; break; }
    case 8: { str2 = "I SQUINTED INTO THE DARKNESS,"; break; }
}
n = rand(1,8);
switch (n)
{
    case 1: { str3 = "AND THOUGHT OF HER ONE LAST TIME."; break; }
    case 2: { str3 = "AND HELD MY HAT AGAINST THE WIND."; break; }
    case 3: { str3 = "AND A COLD CHILL TOOK HOLD OF ME."; break; }
    case 4: { str3 = "AND WONDERED HOW LONG I'D BE BELOW."; break; }
    case 5: { str3 = "AND VOWED TO RETURN VICTORIOUS."; break; }
    case 6: { str3 = "AND SWORE I HEARD VOICES UP AHEAD."; break; }
    case 7: { str3 = "AND FELT THE GODS SMILING UPON ME."; break; }
    case 8: { str3 = "AND THAT'S WHEN IT ALL STARTED."; break; }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (not fadeIn)
{
    if (drawStatus &gt;= 0)
        drawStatus = 1;
    alarm[10] = 80;
}</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (not fadeIn)
{
    if (drawStatus &gt;= 0)
        drawStatus = 2;
    alarm[9] = 80;
}</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="9">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (not fadeIn)
{
    if (drawStatus &gt;= 0)
        drawStatus = 3;
    alarm[8] = 80;
}</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="8">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (not fadeIn)
{    
    drawStatus = -1;
    fadeIn = true;
}</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (keyboard_check_pressed(vk_enter) or
    keyboard_check_pressed(vk_escape) or
    checkAttackPressed() or
    checkStartPressed())
{
    if (not instance_exists(oPDummy3)) fadeIn = true;
    else
    {
        fadeIn = false;
        fadeOut = true;
    }
}

if (fadeIn)
{
    drawStatus = -1;
    if (fadeLevel &gt; 0) fadeLevel -= 0.1;
    else
    {
        fadeIn = false;
        if (not instance_exists(oPDummy3)) instance_create(-32, 184, oPDummy3);
    }
}
else if (fadeOut)
{
    if (fadeLevel &lt; 1) fadeLevel += 0.1;
    else
    {
        global.gameStart = false;
        room_goto(rTitle);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_color(c_black);
draw_set_alpha(fadeLevel);
draw_rectangle(view_xview[0], view_yview[0], view_xview[0]+320, view_yview[0]+240, false);
draw_set_alpha(1);

if (drawStatus &gt; 0)
{
    draw_set_font(global.myFontSmall);
    draw_set_color(c_white);
    strLen = string_length(str1)*8;
    n = 320 - strLen;
    n = ceil(n / 2);
    draw_text(n, 116-16, str1);
}
if (drawStatus &gt; 1)
{
    draw_set_font(global.myFontSmall);
    draw_set_color(c_white);
    strLen = string_length(str2)*8;
    n = 320 - strLen;
    n = ceil(n / 2);
    draw_text(n, 116, str2);
}
if (drawStatus &gt; 2)
{
    draw_set_font(global.myFontSmall);
    draw_set_color(c_white);
    strLen = string_length(str3)*8;
    n = 320 - strLen;
    n = ceil(n / 2);
    draw_text(n, 116+16, str3);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
