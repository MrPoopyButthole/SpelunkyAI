<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>drawStatus = 0;
moneyCount = 0;
fadeOut = false;
fadeLevel = 0;

poop = false;

alarm[0] = 50;

with oMenu
{
    visible = false;
}</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>drawStatus = 4;
playSound(global.sndThump);
global.money += 50000;
moneyCount += 50000;
alarm[3] = 50;</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>drawStatus = 7;</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>drawStatus = 6;
alarm[5] = 10;</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>drawStatus = 5;
alarm[4] = 10;</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>drawStatus = 3;</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>drawStatus = 2;
alarm[2] = 50;</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_create(144, -32, oPDummy2);
playSound(global.sndPFall);</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (keyboard_check_pressed(vk_enter) or
    keyboard_check_pressed(vk_escape) or
    checkAttackPressed() or
    checkStartPressed())
{
    if (drawStatus == 7)
    {
        if (moneyCount &lt; global.money)
        {
            moneyCount = global.money;
        }
        else
        {
            fadeOut = true;
        }
    }
    else if (drawStatus == 8)
    {
        if (gamepad.attackPressed) gamepad.attackPressed = false;
        if (gamepad.startPressed) gamepad.startPressed = false;
        room_goto(rCredits2);
    }
}

if (drawStatus &gt; 2)
{
    moneyDiff = global.money - moneyCount;
    if (moneyDiff &gt; 1000)
        moneyCount += 1000;
    else if (moneyDiff &gt; 100)
        moneyCount += 100;
    else
        moneyCount += moneyDiff;
        
    if (drawStatus == 3 and moneyDiff == 0 and not poop)
    {   
        alarm[11] = 50;
        poop = true;
    }
}

if (fadeOut)
{
    if (fadeLevel &lt; 1) fadeLevel += 0.1;
    else drawStatus = 8;
}</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (drawStatus &gt; 0)
{
    draw_set_font(global.myFont);
    draw_set_color(c_yellow);
    draw_text(64, 32, "YOU MADE IT!");
}
if (drawStatus &gt; 1)
{
    draw_set_font(global.myFontSmall);
    draw_set_color(c_yellow);
    draw_text(64, 64, "FINAL SCORE:");
}
if (drawStatus &gt; 2)
{
    draw_set_font(global.myFont);
    draw_set_color(c_white);
    draw_text(64, 72, "$" + string(moneyCount));
}
if (drawStatus &gt; 4)
{
    s = global.time;
    s = floor(s / 1000);
    m = 0;
    while (s &gt; 59)
    {
        s -= 60;
        m += 1;
    }

    draw_set_font(global.myFontSmall);
    draw_set_color(c_yellow);
    draw_text(64, 96, "TIME: ");
    draw_set_color(c_white);
    if (s &lt; 10) draw_text(96+24, 96, string(m) + ":0" + string(s));
    else draw_text(96+24, 96, string(m) + ":" + string(s));
}
if (drawStatus &gt; 5)
{
    draw_set_font(global.myFontSmall);
    draw_set_color(c_yellow);
    draw_text(64, 96+8, "KILLS: ");
    draw_set_color(c_white);
    draw_text(96+24, 96+8, global.kills);
}
if (drawStatus &gt; 6)
{
    draw_set_font(global.myFontSmall);
    draw_set_color(c_yellow);
    draw_text(64, 96+16, "SAVES: ");
    draw_set_color(c_white);
    draw_text(96+24, 96+16, global.damsels);
}

if (fadeOut)
{
    draw_set_color(c_black);
    draw_set_alpha(fadeLevel);
    draw_rectangle(0, 0, 320, 240, false);
    draw_set_alpha(1);
}

if (drawStatus == 8)
{
    draw_set_font(global.myFontSmall);
    draw_set_color(c_white);
    strLen = string_length("YOU SHALL BE REMEMBERED AS A HERO.")*8;
    n = 320 - strLen;
    n = ceil(n / 2);
    draw_text(n, 116, string("YOU SHALL BE REMEMBERED AS A HERO."));
}</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
