<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sOlmecStart1</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>40</depth>
  <persistent>0</persistent>
  <parentName>oMovingSolid</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>shopWall = false;
makeActive();
setCollisionBounds(2, 0, 62, 64);
xVel = 0
yVel = 0
yDelta = -0.4
myGrav = 0.2;
invincible = true;
viscidTop = 1;
carryPlayer = false;
image_speed = 0.4

LEFT = 0;
RIGHT = 1;
facing = rand(0,1);

// status
START2 = -2;
START1 = -1;
IDLE = 0
BOUNCE = 1
RECOVER = 2
WALK = 3
DROWNING = 4;
PREPARE = 5;
SLAM = 6;
CREATE = 7;
DEAD = 99;
status = -1;

counter = 0;
bounceCounter = 0
slammed = false;

view_hborder[0] = 0;
view_vborder[0] = 0;
view_yview[0] = 400;
view_object[0] = oOlmec;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="6">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with oCavemanWorship
{
    obj = instance_create(x, y, oCaveman)
    obj.facing = 1;
    obj.status = 2;
    instance_destroy();
}</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>view_hborder[0] = 128;
view_vborder[0] = 64;
view_xview[0] = 0;
view_object[0] = oPlayer1;
oPlayer1.active = true;
status = 0;
counter = 100;
playMusic(global.musBoss, true);
//playSound(global.sndBoss);</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>toggle = true;
status = BOUNCE;
playSound(global.sndBigJump);
playSound(global.sndAlert);
alarm[6] = 20;</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>sprite_index = sOlmec;
for (i = 0; i &lt; 12; i += 1)
{
    debris = instance_create(x+rand(0,64), y+32+rand(0,32), oOlmecDebris);
    debris.xVel = rand(1,4)-rand(1,4);
    debris.yVel = -rand(1,3);
}
playSound(global.sndThump);
alarm[4] = 50;</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>sprite_index = sOlmecStart3;
alarm[3] = 50;
for (i = 0; i &lt; 6; i += 1)
{
    debris = instance_create(x+rand(0,32), y+rand(0,32), oOlmecDebris);
    debris.xVel = -rand(1,4);
    debris.yVel = -rand(1,3);
}
playSound(global.sndThump);</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>sprite_index = sOlmecStart2;
for (i = 0; i &lt; 6; i += 1)
{
    debris = instance_create(x+32+rand(0,32), y+rand(0,32), oOlmecDebris);
    debris.xVel = rand(1,4);
    debris.yVel = -rand(1,3);
}
playSound(global.sndThump);
with oHawkmanWorship
{
    obj = instance_create(x, y, oHawkman);
    with obj
    {
        status = 98;
        hp = 1;
        xVel = -3;
        yVel = -5;
        counter = 300;
    }
    instance_destroy();
}
with oCavemanWorship
{
    image_index = 0;
    image_speed = 0;
}
alarm[2] = 50;</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (carryPlayer or collision_rectangle(x-1, y, x+66, y+62, oPlayer1, 0, 0))
{
    oPlayer1.x += xVel;
    oPlayer1.y += yVel;
}
moveTo(xVel,yVel);

if (yVel &lt; 6)
{
    yVel += myGrav;
}
    
if (isCollisionTop(1))
{
    instance_create(x, y-16, oOlmecSlam);
    y += 1;
    if (yVel &lt; 0) yVel = -yVel * 0.8;
}

if (isCollisionLeft(1))
{
    x += 1;
    xVel = 0;
    //if (xVel &lt; 0) xVel = -xVel * 0.8;
}
if (isCollisionRight(1))
{
    x -= 1;
    xVel = 0;
    //if (xVel &gt; 0) xVel = -xVel * 0.8;
}

if (collision_point(x, y+64, oLava, 0, 0)) status = DROWNING;

if (collision_point(x, y-2, oLava, 0, 0))
{
    global.enemyKills[21] += 1;
    oFinalBoss.olmecDead = true;
    global.kills += 1;
    instance_destroy();
}

dist = distance_to_object(oPlayer1) + 32;


if (collision_rectangle(x, y-2, x+64, y+64, oPlayer1, 0, 0)) carryPlayer = true;
else carryPlayer = false;

if (status == START1)
{
    if (view_xview[0] &lt; 176) view_xview[0] += 2;
    else
    {
        alarm[1] = 100;
        status = START2;
    }
    
    if (isCollisionBottom(1))
        yVel = 0;
}
else if (status == START2)
{   
    if (isCollisionBottom(1))
        yVel = 0;
}
else if (status == IDLE)
{
    if (counter &gt; 0) counter -= 1;
    if (counter == 0) status = BOUNCE;
    
    if (isCollisionBottom(1))
    {
        yVel = 0;
    }
    
    toggle = true;
}
else if (status == CREATE)
{
    repeat(6)
    {
        instance_create(x+32+rand(0,32)-rand(0,32), y+14+rand(0,32)-rand(0,32), oPsychicCreate2);
    }
    instance_create(x+32, y+16, oYellowBall);
    instance_create(x+32, y+16, oYellowBall);
    instance_create(x+32, y+16, oYellowBall);
    playSound(global.sndPsychic);
    status = IDLE;
}
else if (status == RECOVER)
{
    if (isCollisionBottom(1))
    {
        playSound(global.sndThump);
        status = IDLE;
        xVel = 0;
        yVel = 0;
        counter = rand(40,100);
    }
    else
    {
        if (counter &gt; 1) counter -= 1;
        else if (counter == 1)
        {
            if (oPlayer1.x &lt; x) xVel = -0.25;
            else if (oPlayer1.x &gt; x+64) xVel = 0.25;
            else xVel = 0;
            counter -= 1;
        }
        else
        {
            if (xVel &lt; 0 and toggle) xVel -= 0.25;
            else if (xVel &lt; 0 and not toggle) xVel += 0.25;
            if (xVel &gt; 0 and toggle) xVel += 0.25;
            else if (xVel &gt; 0 and not toggle) xVel -= 0.25;
            if (xVel &lt;= -2 or xVel &gt;= 2) toggle = not toggle;
        }

        if ((not oPlayer1.active and yVel &gt;= 0) or
            (oPlayer1.y &gt; y and abs(oPlayer1.x - (x+32)) &lt; 32 and xVel &gt; -1))
        {
            status = PREPARE;
            yVel = 0;
            xVel = 0;
            myGrav = 0;
            counter = 20;
        }
    }
}
else if (status == BOUNCE)
{
    if (isCollisionBottom(1))
    {
        yVel = -4;
    }
    else
    {
        counter = 10;
        status = RECOVER;
        playSound(global.sndBigJump);
    }
}
else if (status == PREPARE)
{
    if (counter &gt; 0) counter -= 1;
    else
    {
        yVel = 5;
        myGrav = 0.2;
        status = SLAM;
        slammed = false;
    }
}
else if (status == SLAM)
{
    carryPlayer = false;
    if (isCollisionBottom(1))
    {
        if (not slammed)
        {
            instance_create(x, y+64, oOlmecSlam);
            slammed = true;
            scrShake(5);
        }
        else
        {
            if (rand(1,2) == 1 or not oPlayer1.active) status = IDLE;
            else status = CREATE;
            xVel = 0;
            yVel = 0;
            counter = 60;
            if (not oPlayer1.active) alarm[5] = 50;
        }
    }
}
else if (status == DROWNING)
{
    xVel = 0;
    yVel = 0.1;
    myGrav = 0;
    scrShake(10);
    if (not SS_IsSoundPlaying(global.sndFlame)) playSound(global.sndFlame);
}

if (isCollisionTop(1))
    yVel = 1;
if (isCollisionLeft(1) or isCollisionRight(1))
{
    xVel = -xVel;
}

if (isCollisionSolid())
  y -= 2;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
