<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>status = 0;
joy = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>joyReleased = false;
joyPressed = false;
joyKey = checkJoyButton();
if (joy)
{
    if (joyKey != 0) joy = true;
    else
    {
        joyReleased = true;
        joy = false;
    }
}
else
{
    if (joyKey != 0)
    {
        joyPressed = true;
        joy = true;
    }
    else joy = false;
}

if (joyPressed)
{
if (status == 0)
{
    global.joyJumpVal = joyKey;
}
else if (status == 1)
{
    global.joyAttackVal = joyKey;
}
else if (status == 2)
{
    global.joyItemVal = joyKey;
}
else if (status == 3)
{
    global.joyRunVal = joyKey;
}
else if (status == 4)
{
    global.joyBombVal = joyKey;
}
else if (status == 5)
{
    global.joyRopeVal = joyKey;
}
else if (status == 6)
{
    global.joyFlareVal = joyKey;
}
else if (status == 7)
{
    global.joyPayVal = joyKey;
}
else if (status == 8)
{
    global.joyStartVal = joyKey;
}}

if (joyPressed or keyboard_check_pressed(vk_escape))
{
    status += 1;
    if (gamepad.attackPressed) gamepad.attackPressed = false;
    if (gamepad.startPressed) gamepad.startPressed = false;
    if (status &gt; 8) room_goto(rInit);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>file = file_text_open_write("gamepad.cfg");
file_text_write_string(file, string(global.joyJumpVal));
file_text_writeln(file);
file_text_write_string(file, string(global.joyAttackVal));
file_text_writeln(file);
file_text_write_string(file, string(global.joyItemVal));
file_text_writeln(file);
file_text_write_string(file, string(global.joyRunVal));
file_text_writeln(file);
file_text_write_string(file, string(global.joyBombVal));
file_text_writeln(file);
file_text_write_string(file, string(global.joyRopeVal));
file_text_writeln(file);
file_text_write_string(file, string(global.joyFlareVal));
file_text_writeln(file);
file_text_write_string(file, string(global.joyPayVal));
file_text_writeln(file);
file_text_write_string(file, string(global.joyStartVal));
file_text_close(file);</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_font(global.myFontSmall);
draw_set_color(c_yellow);
strLen = string_length("PRESS BUTTON FOR")*8;
n = 160 - strLen;
n = ceil(n / 2);
draw_text(n, 32, "PRESS BUTTON FOR");
draw_text(8, 96, "ESC TO KEEP SAME.");
draw_text(8, 104, "CURRENT: ");

if (not joystick_exists(1))
{
    draw_set_color(c_red);
    draw_text(8, 88, "NO GAMEPAD FOUND!");
}

if (status == 0)
{
    draw_set_font(global.myFont);
    draw_set_color(c_white);
    strLen = string_length("JUMP")*16;
    n = 160 - strLen;
    n = ceil(n / 2);
    draw_text(n, 40, "JUMP");
    currVal = global.joyJumpVal;
}
else if (status == 1)
{
    draw_set_font(global.myFont);
    draw_set_color(c_white);
    strLen = string_length("ACTION")*16;
    n = 160 - strLen;
    n = ceil(n / 2);
    draw_text(n, 40, "ACTION");
    currVal = global.joyAttackVal;
}
else if (status == 2)
{
    draw_set_font(global.myFont);
    draw_set_color(c_white);
    strLen = string_length("SWITCH")*16;
    n = 160 - strLen;
    n = ceil(n / 2);
    draw_text(n, 40, "SWITCH");
    currVal = global.joyItemVal;
}
else if (status == 3)
{
    draw_set_font(global.myFont);
    draw_set_color(c_white);
    strLen = string_length("RUN")*16;
    n = 160 - strLen;
    n = ceil(n / 2);
    draw_text(n, 40, "RUN");
    currVal = global.joyRunVal;
}
else if (status == 4)
{
    draw_set_font(global.myFont);
    draw_set_color(c_white);
    strLen = string_length("BOMB")*16;
    n = 160 - strLen;
    n = ceil(n / 2);
    draw_text(n, 40, "BOMB");
    currVal = global.joyBombVal;
}
else if (status == 5)
{
    draw_set_font(global.myFont);
    draw_set_color(c_white);
    strLen = string_length("ROPE")*16;
    n = 160 - strLen;
    n = ceil(n / 2);
    draw_text(n, 40, "ROPE");
    currVal = global.joyRopeVal;
}
else if (status == 6)
{
    draw_set_font(global.myFont);
    draw_set_color(c_white);
    strLen = string_length("FLARE")*16;
    n = 160 - strLen;
    n = ceil(n / 2);
    draw_text(n, 40, "FLARE");
    currVal = global.joyFlareVal;
}
else if (status == 7)
{
    draw_set_font(global.myFont);
    draw_set_color(c_white);
    strLen = string_length("PURCHASE")*16;
    n = 160 - strLen;
    n = ceil(n / 2);
    draw_text(n, 40, "PURCHASE");
    currVal = global.joyPayVal;
}
else if (status == 8)
{
    draw_set_font(global.myFont);
    draw_set_color(c_white);
    strLen = string_length("START")*16;
    n = 160 - strLen;
    n = ceil(n / 2);
    draw_text(n, 40, "START");
    currVal = global.joyStartVal;
}

draw_set_font(global.myFontSmall);
switch (currVal)
{
    case 1: { draw_text(80, 104, "B1"); break; }
    case 2: { draw_text(80, 104, "B2"); break; }
    case 3: { draw_text(80, 104, "B3"); break; }
    case 4: { draw_text(80, 104, "B4"); break; }
    case 5: { draw_text(80, 104, "B5"); break; }
    case 6: { draw_text(80, 104, "B6"); break; }
    case 7: { draw_text(80, 104, "B7"); break; }
    case 8: { draw_text(80, 104, "B8"); break; }
    case 9: { draw_text(80, 104, "B9"); break; }
    case 10: { draw_text(80, 104, "B10"); break; }
    case -1: { draw_text(80, 104, "LT (XB)"); break; }
    case -2: { draw_text(80, 104, "RT (XB)"); break; }
    default: { draw_text(80, 104, "B" + string(currVal)); break; }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
