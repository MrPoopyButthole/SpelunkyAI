<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sCapeRight</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>100</depth>
  <persistent>0</persistent>
  <parentName>oDrawnSprite</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>open = false;</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (instance_exists(oTransition) and not instance_exists(oPDummy))
{
    instance_destroy();
}
else if (instance_exists(oPDummy))
{
    if (oPDummy.sprite_index == sPExit or oPDummy.sprite_index == sDamselExit or oPDummy.sprite_index == sTunnelExit)
    {
        x = oPDummy.x;
        y = oPDummy.y+4;
        sprite_index = sCapeBack;
        depth = 0;
    }
    else
    {
        x = oPDummy.x - 4;
        y = oPDummy.y - 2;
        if (oPDummy.sprite_index == sRunLeft or oPDummy.sprite_index == sDamselRunL or oPDummy.sprite_index == sTunnelRunL) sprite_index = sCapeRight;
        else sprite_index = sCapeDR;
        depth = 100;
    }
}
else if ((oPlayer1.state == 14 or (oPlayer1.sprite_index == sPExit or oPlayer1.sprite_index == sDamselExit or oPlayer1.sprite_index == sTunnelExit)) and not oPlayer1.whipping)
{
    x = oPlayer1.x;
    y = oPlayer1.y+4;
    sprite_index = sCapeBack;
    depth = 0;
}
else if (oPlayer1.facing == 19)
{
    x = oPlayer1.x - 4;
    y = oPlayer1.y - 2;
    if (oCape.open) sprite_index = sCapeUR;
    else if (abs(oPlayer1.xVel) &gt; 0) sprite_index = sCapeRight;
    else sprite_index = sCapeDR;
    depth = 100;
}
else
{
    x = oPlayer1.x + 4;
    y = oPlayer1.y - 2;
    if (oCape.open) sprite_index = sCapeUL;
    else if (abs(oPlayer1.xVel) &gt; 0) sprite_index = sCapeLeft;
    else sprite_index = sCapeDL;
    depth = 100;
}

if (instance_exists(oPlayer1))
    if (not oPlayer1.visible) instance_destroy();</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
