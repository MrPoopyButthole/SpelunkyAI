<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sYetiKingLeft</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>60</depth>
  <persistent>0</persistent>
  <parentName>oEnemy</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>makeActive();
setCollisionBounds(6, 0, 26, 32);
xVel = 2.5;
image_speed = 0.25;

// stats
type = "Yeti King";
hp = 30;
invincible = 0;
heavy = true;

IDLE = 0;
WALK = 1;
TURN = 2;
ATTACK = 3;
STUNNED = 98;
DEAD = 99;
status = IDLE;

canPickUp = false;
bounced = false;
dead = false;
whipped = 0;
counter = 0;
attackTimer = 0;

LEFT = 0;
RIGHT = 1;
facing = RIGHT;

shakeCounter = 0;
shakeToggle = 1;</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if ((x &gt; view_xview[0]-36 and x &lt; view_xview[0] + view_wview[0] and
        y &gt; view_yview[0]-36 and y &lt; view_yview[0] + view_hview[0]))
{
moveTo(xVel,yVel);

yVel += myGrav;
if (yVel &gt; yVelLimit) yVel = yVelLimit;

if (collision_point(x+16, y+16, oSolid, 0, 0))
{
    hp = 0;
}

if (hp &lt; 1)
{
    scrCreateBlood(x+14+rand(0,4), y+14+rand(0,4), 3);
    repeat(4)
    {
        instance_create(x+14+rand(0,4), y+14+rand(0,6), oBone);
    }
    repeat(4)
    {
        if (rand(1,12) == 1)
        {
            obj = instance_create(x+16, y+16, oSpikeShoes);
            obj.cost = 0;
            obj.forSale = false;
        }
        else if (rand(1,2) == 1) obj = instance_create(x+16, y+16, oSapphireBig);
        else
        {
            obj = instance_create(x+16, y+16, oRopePile);
            obj.cost = 0;
            obj.forSale = false;
        }
        obj.xVel = rand(0,3)-rand(0,3);
        obj.yVel = -rand(1,2);
    }
    if (countsAsKill)
    {
        global.enemyKills[14] += 1;
        global.yetikings += 1;
        global.kills += 1;
    }
    instance_destroy();
}

if (isCollisionBottom(1) and status != STUNNED) yVel = 0;

if (attackTimer &gt; 0) attackTimer -= 1;
if (whipped &gt; 0) whipped -= 1;
    
if (status == IDLE)
{
    if (counter &gt; 0) counter -= 1;    
    if (counter &lt;= 0)
    {
        status = WALK;
    }
}
else if (status == WALK)
{
    if (counter &gt; 0) counter -= 1;
    
    if (facing == LEFT)
    {
        if (isCollisionLeft(1) or
            (oPlayer1.x &gt; x+16 and abs(oPlayer1.y-(y+32)) &lt; 16 and counter == 0))
        {
            sprite_index = sYetiKingTurnR;
            status = TURN;
            counter = 30;
        }
        else if (oPlayer1.x &lt; x+16 and abs(oPlayer1.y-(y+16)) &lt; 32 and attackTimer == 0)
        {
            status = ATTACK;
            sprite_index = sYetiKingYellL;
            image_index = 0;
            xVel = 0;
        }
        else xVel = -1;
    }
    else if (facing == RIGHT)
    {
        if (isCollisionRight(1) or
            (oPlayer1.x &lt; x+16 and abs(oPlayer1.y-(y+32)) &lt; 16 and counter == 0))
        {
            sprite_index = sYetiKingTurnL;
            status = TURN;
            counter = 30;
        }
        else if (oPlayer1.x &gt; x+16 and abs(oPlayer1.y-(y+16)) &lt; 32 and attackTimer == 0)
        {
            status = ATTACK;
            sprite_index = sYetiKingYellR;
            image_index = 0;
            xVel = 0;
        }
        else xVel = 1;
    }
}
else if (status == TURN)
{
    xVel = 0;
}
else if (status == ATTACK)
{
    xVel = 0;
    image_speed = 0.5;
    attackTimer = 100;
    if (image_index &gt;= 7 and image_index &lt;= 12)
    {
        if (not SS_IsSoundPlaying(global.sndYetiYell)) playSound(global.sndYetiYell);
        with oIce
        {
            if (instance_exists(oYetiKing))
            {
                if (rand(1,60) == 1 and
                    abs((oYetiKing.x+16)-(x+8)) &gt; 16 and
                    point_distance(x, y, oYetiKing.x, oYetiKing.y) &lt; 96)
                {
                    instance_create(x, y, oIceBlock);
                    instance_destroy();
                }
            }
        }
        with oThinIce
        {
            thickness -= 2;
        }
    }
}

if (isCollisionSolid())
    y -= 2;

if (facing == LEFT)
{   
    if (status == WALK) sprite_index = sYetiKingWalkL;
    else if (status == IDLE) sprite_index = sYetiKingLeft;
}
if (facing == RIGHT)
{   
    if (status == WALK) sprite_index = sYetiKingWalkR;
    else if (status == IDLE) sprite_index = sYetiKingRight;
}
}</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="oWhip">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (whipped == 0 and other.y &lt; y+12)
{
    if (other.puncture)
    {
        hp -= other.damage;
        countsAsKill = true;
        scrCreateBlood(x+sprite_width/2, y+sprite_height/2, 1);
        playSound(global.sndHit);
        whipped = 10;
    }
    else
    {
        playSound(global.sndHit);
        whipped = 10;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="oCharacter">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// jumped on - oCaveman, oManTrap replaces this script with its own
if (abs(other.x-(x+16)) &gt; 16)
{
    // do nothing
}
else if (not other.dead and (other.state == 15 or other.state == 16) and other.y &lt; y+8 and not other.swimming)
{
    other.yVel = -6 - 0.2 * other.yVel;
    if (global.hasSpikeShoes) { hp -= (3 * ceil(other.fallTimer/16)); instance_create(other.x, other.y+8, oBlood); }
    else hp -= (1 * ceil(other.fallTimer/16));
    other.fallTimer = 0;
    countsAsKill = true;
    instance_create(x+16, y+8, oBlood);
    playSound(global.sndHit);
}
else if (other.invincible == 0)
{
    other.blink = 30
    other.invincible = 30
    if (other.y &lt; y)
        other.yVel = -6
    if (other.x &lt; x)
        other.xVel = -6
    else
        other.xVel = 6
    
    if (global.plife &gt; 0 and isRealLevel())
    {
        global.plife -= 2;
        if (global.plife &lt;= 0) global.enemyDeaths[14] += 1;
    }
    playSound(global.sndHurt);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (sprite_index == sYetiKingTurnR)
{
    facing = RIGHT;
    status = WALK;
}
if (sprite_index == sYetiKingTurnL)
{
    facing = LEFT;
    status = WALK;
}
if (sprite_index == sYetiKingYellL or sprite_index == sYetiKingYellR)
{
    status = IDLE;
    counter = 30;
    image_speed = 0.25;
}</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite_ext(sprite_index, image_index, x, y, 1, image_yscale, image_angle, image_blend, image_alpha);</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
