<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sRunLeft</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>997</depth>
  <persistent>0</persistent>
  <parentName>oDrawnSprite</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// dummy actor for ending (falling from volcano)

DROP = 0;
STUNNED = 1;
GETUP = 2;
JUMPING = 3;
status = 0;

xVel = 0;
yVel = 0;
myGrav = 0.6;

LEFT = 0;
RIGHT = 1;
facing = LEFT;

if (global.isDamsel) sprite_index = sDamselRunL;
else if (global.isTunnelMan) sprite_index = sTunnelRunL;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with oEnd3
{
    drawStatus = 1;
    alarm[1] = 50;
    playMusic(global.musVictory, false);
}</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.isDamsel) sprite_index = sDamselLeft;
else if (global.isTunnelMan) sprite_index = sTunnelLeft;
else sprite_index = sStandLeft;</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_create(160, -32, oBigTreasure);
playSound(global.sndTFall);</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>x += xVel;
y += yVel;

if (status == DROP)
{
    if (global.isDamsel) sprite_index = sDamselFallL;
    else if (global.isTunnelMan) sprite_index = sTunnelFallL;
    else sprite_index = sDieLFall;
    yVel = 6;
    if (collision_point(x, y+9, oDesert2, 0, 0))
    {
        yVel = 0;
        status += 1;
        if (global.isDamsel) sprite_index = sDamselStunL;
        else if (global.isTunnelMan) sprite_index = sTunnelStunL;
        else sprite_index = sStunL;
        poof = instance_create(x-4, y+6, oPoof);
        with poof { xVel = -0.4; }
        poof = instance_create(x+4, y+6, oPoof);
        with poof { xVel = 0.4; }
        playSound(global.sndThud);
    }
}
else if (status == STUNNED)
{
    alarm[0] = 70;
    alarm[1] = 50;
    status = GETUP;
}
else if (status == GETUP)
{
    treasure = instance_nearest(x, y, oBigTreasure);
    if (treasure)
    {
        if (treasure.yVel == 0)
        {
            yVel = -4;
            status = JUMPING;
        }
    }
}
else if (status == JUMPING)
{
    if (global.isDamsel) sprite_index = sDamselDieLR;
    else if (global.isTunnelMan) sprite_index = sTunnelDieLR;
    else sprite_index = sJumpLeft;
    if (yVel &lt; 4) yVel += 0.6;
    if (collision_point(x, y+6, oDesert2, 0, 0))
    {
        yVel = 0;
        status += 1;
        alarm[2] = 50;
        if (global.isDamsel) sprite_index = sDamselLeft;
        else if (global.isTunnelMan) sprite_index = sTunnelLeft;
        else sprite_index = sStandLeft;
        facing = RIGHT;
        with oMenu
        {
            visible = true;
        }
    }
}   

if (collision_point(x, y+6, oDesert2, 0, 0))
{
    y -= 2;
}
if (collision_point(x, y+7, oDesert2, 0, 0))
{
    y -= 1;
}</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (facing == RIGHT) image_xscale = -1;
else image_xscale = 1;

if ((sprite_index == sPExit or sprite_index == sDamselExit or sprite_index == sTunnelExit) and global.hasJetpack)
{
    draw_sprite_ext(sprite_index, -1, x, y, image_xscale, image_yscale, image_angle, image_blend, image_alpha);
    draw_sprite(sJetpackBack,-1,x,y);
}
else if (sprite_index == sPExit or sprite_index == sDamselExit or sprite_index == sTunnelExit)
{
    draw_sprite_ext(sprite_index, -1, x, y, image_xscale, image_yscale, image_angle, image_blend, image_alpha);
}
else if (global.hasJetpack)
{
    draw_sprite(sJetpackRight,-1,x-4,y-1);
}

if (sprite_index != sPExit and sprite_index != sDamselExit and sprite_index != sTunnelExit)
{
    draw_sprite_ext(sprite_index, -1, x, y, image_xscale, image_yscale, image_angle, image_blend, image_alpha);
    if (global.pickupItem == "Rock") holdItem = draw_sprite(sRock,-1,x+4,y+2);
    else if (global.pickupItem == "Jar") holdItem = draw_sprite(sJar,-1,x+4,y+2);
    else if (global.pickupItem == "Skull") holdItem = draw_sprite(sSkull,-1,x+4,y+2);
    else if (global.pickupItem == "Fish Bone") holdItem = draw_sprite(sFishBone,-1,x+4,y+2);
    else if (global.pickupItem == "Arrow") holdItem = draw_sprite(sArrowRight,-1,x+4,y+2);
    else if (global.pickupItem == "Rock") holdItem = draw_sprite(sRock,-1,x+4,y+2);
    else if (global.pickupItem == "Machete") holdItem = draw_sprite(sMacheteRight,-1,x+4,y+2);
    else if (global.pickupItem == "Mattock") holdItem = draw_sprite(sMattockRight,-1,x+4,y+2);
    else if (global.pickupItem == "Mattock Head") holdItem = draw_sprite(sMattockHead,-1,x+4,y+2);
    else if (global.pickupItem == "Pistol") holdItem = draw_sprite(sPistolRight,-1,x+4,y+2);
    else if (global.pickupItem == "Web Cannon") holdItem = draw_sprite(sWebCannonR,-1,x+4,y+2);
    else if (global.pickupItem == "Teleporter") holdItem = draw_sprite(sTeleporter,-1,x+4,y+2);
    else if (global.pickupItem == "Shotgun") holdItem = draw_sprite(sShotgunRight,-1,x+4,y+2);
    else if (global.pickupItem == "Bow") holdItem = draw_sprite(sBowRight,-1,x+4,y+2);
    else if (global.pickupItem == "Flare") holdItem = draw_sprite(sFlare,-1,x+4,y+2);
    else if (global.pickupItem == "Sceptre") holdItem = draw_sprite(sSceptreRight,-1,x+4,y+2);
    else if (global.pickupItem == "Key") holdItem = draw_sprite(sKeyRight,-1,x+4,y+2);
}</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
