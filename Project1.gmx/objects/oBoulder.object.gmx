<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sBoulder</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>200</depth>
  <persistent>0</persistent>
  <parentName>oMovingSolid</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>makeActive();
setCollisionBounds(-14, -16, 14, 16);
myGrav = 0.6;
dir = 0;
LEFT = 100;
RIGHT = 101;
invincible = true;
bounced = false;
viscidTop = 1;</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (true)
{
    colLeft = false;
    colRight = false;
    moveTo(xVel, yVel)
    //x += xVel;
    //y += yVel;
    
    if (yVel &lt; 8)
    {
        yVel += myGrav;
    }

    if (x-17 &lt;= 16 and xVel &lt; 0)
    {
        x += 1;
        xVel = -xVel;
    }
    
    if (x+17 &gt;= 656 and xVel &gt; 0)
    {
        x -= 1;
        xVel = -xVel;
    }
    
    if (isCollisionTop(1) and yVel &lt; 0)
    {
        yVel = -yVel * 0.8;
    }
    
    if (isCollisionBottom(1))
    {
        // bounce
        if (yVel &gt; 3) yVel = -yVel * 0.3;
        else yVel = 0;
        
        // friction
        if (abs(xVel) != 0) xVel *= 0.99;
        
        if (not bounced and xVel == 0)
        {
            if (oPlayer1.x &lt; x)
            {
                xVel = -4.5;
            }
            else
            {
                xVel = 4.5;
            }
            bounced = true;
        }
        
        if (abs(xVel) &lt; 0.5) xVel = 0;
    }
    
    if (not collision_point(x, y+16, oSolid, 0, 0))
    {
        colLeft = collision_rectangle(x-16, y-16, x-8, y+16, oSolid, false, true);
        colRight = collision_rectangle(x+8, y-16, x+16, y+16, oSolid, false, true);
        if (colLeft and not colRight) x += 1;
        else if (colRight and not colLeft) x -= 1;
    }
    
    image_speed = abs(xVel) / 5;
    
    if (xVel &lt; 0)
    {
        sprite_index = sBoulderRotateL;
    }
    else if (xVel &gt; 0)
    {
        sprite_index = sBoulderRotateR;
    }
    else
    {
        sprite_index = sBoulder;
    }

    /*
    if (xVel == 0 and yVel == 0)
    {
        instance_create(x, y, oBoulderStatic);
        instance_destroy();
    }
    */
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="oSolid">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (true)
{   
    if (other.invincible or abs(xVel) &lt; 1)
    {
        xVel = -xVel * 0.5;
    }
    else
    {
        if (abs(xVel) &lt; 1 or other.y &gt; y+13)
        {
            y -= 1;
            // nothing
        }
        else
        {
            with other
            {
                tile = tile_layer_find(3, x, y-16);
                if (tile) tile_delete(tile);
                
                tile = tile_layer_find(3, x, y-8);
                if (tile) tile_delete(tile);
                
                tile = tile_layer_find(3, x, y);
                if (tile) tile_delete(tile);
                
                
                tile = instance_position(x+8, y-1, oSpikes);
                if (tile) with tile { instance_destroy(); }
                instance_destroy();
            }
            playSound(global.sndCrunch);
        }
        if (xVel &gt; 0) xVel -= 0.1;
        else if (xVel &lt; 0) xVel += 0.1;
        if (abs(xVel) &lt; 1) xVel = 0;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
