<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sDeadFishLeft</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>40</depth>
  <persistent>0</persistent>
  <parentName>oEnemy</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_speed = 0.5;
setCollisionBounds(0, 0, 8, 8);
origX = 0;
origY = 0;
xVel = 0;
yVel = 0;
xAcc = 0.2;
yAcc = 0.2;
dir = 0;

// stats
hp = 1;
invincible = 0;

bubbleTimer = 0;
bubbleTimerMax = 40;

// status
IDLE = 0;
ATTACK = 1;
PAUSE = 2;

status = 0;
counter = 0;
bloodless = true;

shakeCounter = 0;
shakeToggle = 1;</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if ((x &gt; view_xview[0]-16 and x &lt; view_xview[0] + view_wview[0] and
        y &gt; view_yview[0]-16 and y &lt; view_yview[0] + view_hview[0]))
{
if (hp &lt; 1)
{
    repeat(3)
    {
        instance_create(x+4, y+4, oBone);
    }
    if (countsAsKill)
    {
        if (isRealLevel()) global.enemyKills[11] += 1;
        global.deadfish += 1;
        global.kills += 1;
    }
    instance_destroy()
}

dist = point_distance(x, y, oCharacter.x, oCharacter.y)

if (status == IDLE)
{
    if (dir == 0)
    {
        if (collision_point(x+8+2, y, oWater, 0, 0) and not (collision_point(x+10, y, oSolid, 0, 0)))
            moveTo(1,0);
        else dir = 180;
    }
    else
    {
        if (collision_point(x-2, y, oWater, 0, 0) and not (collision_point(x-2, y, oSolid, 0, 0)))
            moveTo(-1,0);
        else dir = 0;
    }

    if (dist &lt; 90 and oCharacter.swimming)
    {
        status = ATTACK;
    }
}
else if (status == PAUSE)
{
    if (counter &gt; 0) counter -= 1;
    else
    {
        status = IDLE;
        dir = rand(0,1)*180;
    }
}
else if (instance_exists(oCharacter))
{
    if (dist &lt; 90 and oCharacter.swimming and not oCharacter.dead)
    {
        dir = point_direction(x, y, oCharacter.x, oCharacter.y)+rand(0,1)-rand(0,1);
        if (collision_point(x + cos(degtorad(dir)), y - sin(degtorad(dir)), oWater, 0, 0))
            moveTo(1 * cos(degtorad(dir)), -1 * sin(degtorad(dir)))
    }
    else
    {
        status = PAUSE;
        counter = rand(20,40);
    }
}

if (dir &gt; 90 and dir &lt; 270)
    sprite_index = sDeadFishLeft;
else
    sprite_index = sDeadFishRight;
    
if (not collision_point(x+4, y+4, oWater, 0, 0))
{
    instance_create(x, y, oFishBone);
    instance_destroy();
}
}</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
