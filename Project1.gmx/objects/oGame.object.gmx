<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Create Game
drawStatus = 0;
moneyCount = 0;
globalvar debug;
debug = false;
global.ghostExists = false;

damsel = false;
idol = false;
altar = false;

// Black Market
genClothingShop = false;
genBombShop = false;
genSupplyShop = false;
genRareShop = false;
genWeaponShop = false;

if (instance_number(oGame) &gt; 1) instance_destroy();

moveableSolidGrav = 1; // how fast moveable solids should accelerate downwards
time = 1;

// sound_loop(sndMusicTest);

if (global.gameStart) scrInitLevel();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.udjatBlink = not global.udjatBlink;

if (global.hasUdjatEye)
{
    if (global.udjatBlink)
        playSound(global.sndBlink1);
    else
        playSound(global.sndBlink2);
}</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (drawStatus &lt; 3) drawStatus = 3;</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (drawStatus &lt; 3) drawStatus = 2;
alarm[1] = 50;</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>601</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_execute_script</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>9</kind>
            <script>gameStepEvent</script>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (not instance_exists(oXMarket)) global.udjatBlink = false;
else
{
    with oPlayer1
    {
        dm = distance_to_object(oXMarket);
        if (dm &lt; 4) dm = 4;
        if (oGame.alarm[2] &lt; 1 or dm &lt; oGame.alarm[2]) oGame.alarm[2] = dm;
    }
}

if (global.gameStart and instance_exists(oCharacter) and isLevel())
{
    if (not oCharacter.dead)
    {
        global.time += room_speed;
        global.xtime += room_speed;
    }
}

// GHOST
if (instance_exists(oPlayer1))
{
    if (isLevel() and not isRoom("rOlmec") and not isRoom("rLoadLevel") and global.currLevel &gt; 1 and
        not global.hasCrown and global.xtime &gt; 120000 and
        oPlayer1.sprite_index != sPExit and oPlayer1.sprite_index != sDamselExit)
    {
        if (not oLevel.musicFade)
        {
            oLevel.musicFade = true;
            global.message = "A CHILL RUNS UP YOUR SPINE...";
            global.message2 = "LET'S GET OUT OF HERE!";
            global.messageTimer = 200;
        }
    }
    
    if (isLevel() and not isRoom("rOlmec") and not isRoom("rLoadLevel") and global.currLevel &gt; 1 and
        not global.hasCrown and global.xtime &gt; 150000 and not global.ghostExists and
        oPlayer1.sprite_index != sPExit and oPlayer1.sprite_index != sDamselExit)
    {
        if (oPlayer1.x &gt; room_width / 2) instance_create(view_xview[0]+view_wview[0]+8, view_yview[0]+floor(view_hview[0] / 2), oGhost);
        else instance_create(view_xview[0]-32,  view_yview[0]+floor(view_hview[0] / 2), oGhost);
        global.ghostExists = true;
    }
}

if (global.checkWater)
{
    global.waterCounter = 0;
    with oWater
    {
        // if (y &gt; view_yview[0]-32 and y &lt; view_yview[0] + view_hview[0]+32 and not isRoom("rOlmec"))
        if (not isRoom("rOlmec"))
        {
            if ((!isRoom("rLoadLevel") and y &lt; 512) or isRoom("rLoadLevel"))
            {
        
            instance_activate_region(x-16, y-16, 48, 48, true);
        
            if (not collision_point(x, y-16, oSolid, 0, 0) and not collision_point(x, y-16, oWater, 0, 0))
            {
                if (type == "Lava") sprite_index = sLavaTop;
                else sprite_index = sWaterTop;
            }
            
            obj = instance_place(x-16, y, oWater);
            if (instance_exists(obj))
            {
                if (obj.sprite_index == sWaterTop or obj.sprite_index == sLavaTop)
                {
                    if (type == "Lava") sprite_index = sLavaTop;
                    else sprite_index = sWaterTop;
                }
            }
            
            obj = instance_place(x+16, y, oWater);
            if (instance_exists(obj))
            {
                if (obj.sprite_index == sWaterTop or obj.sprite_index == sLavaTop)
                {
                    if (type == "Lava") sprite_index = sLavaTop;
                    else sprite_index = sWaterTop;
                }
            }
            
            if ((not collision_point(x-16, y, oSolid, 0, 0) and not collision_point(x-16, y, oWater, 0, 0)) or
                (not collision_point(x+16, y, oSolid, 0, 0) and not collision_point(x+16, y, oWater, 0, 0)) or
                (not collision_point(x, y+16, oSolid, 0, 0) and not collision_point(x, y+16, oWater, 0, 0))) 
            {
                instance_destroy();
                global.waterCounter += 1;
            }
            
            global.waterLoopSafety += 1;
            if (global.waterLoopSafety &gt; 100000) global.checkWater = false;
            
            }
        }
    }
    
    if (global.waterCounter == 0) global.checkWater = false;
}
else
{
    global.waterLoopSafety = 0;
}

// game over
if (instance_exists(oPlayer1))
{
    if (oPlayer1.dead)
    {
        if (drawStatus == 0)
        {
            alarm[0] = 50;
            drawStatus += 1;
        }
        if (drawStatus &gt; 2)
        {
            moneyDiff = global.money - moneyCount;
            if (moneyDiff &gt; 1000)
                moneyCount += 1000;
            else if (moneyDiff &gt; 100)
                moneyCount += 100;
            else
                moneyCount += moneyDiff;
       }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw the HUD

display_set_gui_size(view_wview[0],view_hview[0])

scrDrawHUD()

if (global.messageTimer &gt; 0)
{
    draw_set_font(global.myFontSmall);
    draw_set_color(c_white);
    strLen = string_length(global.message)*8;
    n = 320 - strLen;
    n = ceil(n / 2);
    draw_text(n, 216, string(global.message));

    if (not isRoom("rTutorial")) draw_set_color(c_yellow);
    strLen = string_length(global.message2)*8;
    n = 320 - strLen;
    n = ceil(n / 2);
    draw_text(n, 224, string(global.message2));

    global.messageTimer -= 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (instance_exists(oPlayer1))
{
    if (oPlayer1.dead or isRoom("rMoon"))
    {
        if (isLevel())
        {
            if (drawStatus &gt; 0)
            {
                draw_set_font(global.myFont);
                draw_set_color(c_yellow);
                draw_text(view_xview[0]+88, view_yview[0]+32+16, "GAME OVER");
            }
            if (drawStatus &gt; 1)
            {
                draw_set_font(global.myFontSmall);
                draw_set_color(c_yellow);
                draw_text(view_xview[0]+88, view_yview[0]+64+16, "FINAL SCORE:");
            }
            if (drawStatus &gt; 2)
            {
                draw_set_font(global.myFont);
                draw_set_color(c_white);
                draw_text(view_xview[0]+88, view_yview[0]+72+16, "$" + string(moneyCount));
                
                draw_set_font(global.myFontSmall);
                draw_set_color(c_yellow);
                if (global.customLevel)
                {
                    if (global.testLevel != "")
                    {
                        if (global.gamepadOn) str = "PRESS " + scrGetJoy(global.joyAttackVal) + " TO EDIT LEVEL.";
                        else str = "PRESS " + scrGetKey(global.keyAttackVal) + " TO EDIT LEVEL.";
                    }
                    else
                    {
                        if (global.gamepadOn) str = "PRESS " + scrGetJoy(global.joyAttackVal) + " TO LOAD ANOTHER LEVEL.";
                        else str = "PRESS " + scrGetKey(global.keyAttackVal) + " TO LOAD ANOTHER LEVEL.";
                    }
                    strLen = string_length(str)*8;
                    n = 320 - strLen;
                    n = ceil(n / 2);
                    draw_text(view_xview[0]+n, view_yview[0]+120, str);
                }
                else
                {
                    if (global.gamepadOn) str = "PRESS " + scrGetJoy(global.joyAttackVal) + " FOR HIGH SCORES.";
                    else str = "PRESS " + scrGetKey(global.keyAttackVal) + " FOR HIGH SCORES.";
                    strLen = string_length(str)*8;
                    n = 320 - strLen;
                    n = ceil(n / 2);
                    draw_text(view_xview[0]+n, view_yview[0]+120, str);
                }
            }
        }
        else if (isRoom("rSun"))
        {
            if (drawStatus &gt; 0)
            {
                draw_set_font(global.myFont);
                draw_set_color(c_yellow);
                draw_text(view_xview[0]+88, view_yview[0]+32+16, "FINISHED!");
            }
            if (drawStatus &gt; 1)
            {
                draw_set_font(global.myFontSmall);
                draw_set_color(c_yellow);
                if (oSunRoom.highscore) str = "YOU SET A NEW RECORD!";
                else str = "BETTER LUCK NEXT TIME...";
                strLen = string_length(str)*8;
                n = 320 - strLen;
                n = ceil(n / 2);
                draw_text(n, view_yview[0]+64+16, str);
            }
        }
        else if (isRoom("rMoon"))
        {
            if (oMoonRoom.timer &lt; 0)
            {
                if (drawStatus &gt; 0)
                {
                    draw_set_font(global.myFont);
                    draw_set_color(c_yellow);
                    draw_text(view_xview[0]+88, view_yview[0]+32+16, "FINISHED!");
                }
                if (drawStatus &gt; 1)
                {
                    draw_set_font(global.myFontSmall);
                    draw_set_color(c_yellow);
                    if (oMoonRoom.highscore) str = "YOU SET A NEW RECORD!";
                    else str = "BETTER LUCK NEXT TIME...";
                    strLen = string_length(str)*8;
                    n = 320 - strLen;
                    n = ceil(n / 2);
                    draw_text(n, view_yview[0]+64+16, str);
                }
            }
        }
        else if (isRoom("rStars"))
        {
            if (drawStatus &gt; 0)
            {
                draw_set_font(global.myFont);
                draw_set_color(c_yellow);
                draw_text(view_xview[0]+88, view_yview[0]+32+16, "FINISHED!");
            }
            if (drawStatus &gt; 1)
            {
                draw_set_font(global.myFontSmall);
                draw_set_color(c_yellow);
                if (oStarsRoom.highscore) str = "YOU SET A NEW RECORD!";
                else str = "BETTER LUCK NEXT TIME...";
                strLen = string_length(str)*8;
                n = 320 - strLen;
                n = ceil(n / 2);
                draw_text(n, view_yview[0]+64+16, str);
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>524</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_color</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>13</kind>
            <string>16777215</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// DEBUGGING TEXT

// Display level path
if (false and room == rLevel)
{
    for (j = 0; j &lt; 4; j += 1)
    {
        for (i = 0; i &lt; 4; i += 1)
        {
            draw_text(oPlayer1.x+48+i*16, oPlayer1.y-64+16+j*16, string(global.roomPath[i,j]));
        }
    }
}

if (false and instance_exists(oPlayer1))
{
    file = file_text_open_read("stats.txt");

    if (file)
    {
    file_text_readln(file);
    file_text_readln(file);
    file_text_readln(file);
    file_text_readln(file);
    str = file_text_read_string(file);
    str = string_delete(str, 1, 20);
    global.totalCrates = real(str);
    file_text_readln(file);
    str = file_text_read_string(file);
    // str = string_delete(str, 1, 20);
    // global.totalChests = real(str);
        
    draw_text(oPlayer1.x+16, oPlayer1.y-16, str);
        
    file_text_close(file);
    }
}

if (false and instance_exists(oPlayer1))
{
    draw_set_font(global.myFontSmall);
    draw_set_color(c_white);
    draw_text(oPlayer1.x+16, oPlayer1.y-16, string(oPlayer1.stunTimer));
    // if (instance_exists(oLockedChest)) { with oPlayer1 { draw_text(x+16, y-32, distance_to_object(oLockedChest)); } }
    // else { draw_text(oPlayer1.x+16, oPlayer1.y-16, "0"); }
    //if (global.madeMoai == true) draw_text(oPlayer1.x+16, oPlayer1.y-16, "TRUE");
    //else draw_text(oPlayer1.x+16, oPlayer1.y-16, "FALSE");
    //draw_text(oPlayer1.x+16, oPlayer1.y-16, string_upper(global.pickupItem));
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>524</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_color</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>13</kind>
            <string>65535</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// draw_text(oPlayer1.x-24, oPlayer1.y-48, string(radtodeg(arctan(1))));

// DEBUG

if (false and room == rLevel and instance_exists(oXMarket))
{
draw_text(oPlayer1.x-24, oPlayer1.y-48, string(oPlayer1.x-oXMarket.x));
draw_text(oPlayer1.x, oPlayer1.y-48, string(oPlayer1.y-oXMarket.y));
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="77">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.music)
{
    global.music = false;
    stopAllMusic();
}
else
{
    global.music = true;
    if (isLevel())
    {
        if (global.levelType == 1) playMusic(global.musLush, true);
        else if (global.levelType == 2) playMusic(global.musIce, true);
        else if (global.levelType == 3) playMusic(global.musTemple, true);
        else if (isRoom("rOlmec"))
        {
            if (oPlayer1.active)
                playMusic(global.musBoss, true);
        }
        else playMusic(global.musCave, true);
    }
    else if (isRoom("rTitle")) playMusic(global.musTitle, true);
}</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
