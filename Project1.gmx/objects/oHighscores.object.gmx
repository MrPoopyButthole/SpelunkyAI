<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with oScreen { canPause = true; }

global.currLevel = 1;

shakeToggle = false;
global.darkLevel = false;
global.snakePit = false;
global.messageTimer = 0;
global.mini1 = 0;
global.mini2 = 0;
global.mini3 = 0;
global.hasJordans = false;
global.arrows = 0;

sunGold = 200000;
moonGold = 600000;
starsGold = 120;

ini_open("spelunky.ini")

tMoney = ini_read_real("highscore","value1",0) -0;
tTime = ini_read_real("highscore","value2",0) -0;
tKills = ini_read_real("highscore","value3",0) -0;
tSaves = ini_read_real("highscore","value4",0)-0;

ini_close()

// debug
/*
tMoney = 200000;
tTime = 1;
tKills = 200;
tSaves = 8;
*/

if (tMoney &gt;= 50000)
{
    trophy = instance_create(32, 32, oTrophy);
    if (tMoney &gt;= 200000)
    {
        trophy.sprite_index = sGoldTrophy;
        instance_create(32, 48, oXSun);
    }
    else if (tMoney &gt;= 100000)
    {
        trophy.sprite_index = sSilverTrophy;
    }
    else
    {
        trophy.sprite_index = sBronzeTrophy;
    }
}

if (tTime &gt; 0 and tTime &lt; 960)
{
    trophy = instance_create(64, 64, oTrophy);
    if (tTime &lt;= 960)
    {
        trophy.sprite_index = sBronzeTrophy;
    }
    if (tTime &lt;= 720)
    {
        trophy.sprite_index = sSilverTrophy;
    }
    if (tTime &lt;= 600)
    {
        trophy.sprite_index = sGoldTrophy;
        instance_create(64, 80, oXMoon);
    }
}

if (tKills &gt;= 80)
{
    trophy = instance_create(32, 96, oTrophy);
    if (tKills &gt;= 120)
    {
        trophy.sprite_index = sGoldTrophy;
        instance_create(32, 112, oXStars);
    }
    else if (tKills &gt;= 100)
    {
        trophy.sprite_index = sSilverTrophy;
    }
    else
    {
        trophy.sprite_index = sBronzeTrophy;
    }
}

if (tSaves &gt;= 4)
{
    trophy = instance_create(64, 128, oTrophy);
    if (tSaves &gt;= 8)
    {
        trophy.sprite_index = sGoldTrophy;
        instance_create(64, 144, oXChange);
    }
    else if (tSaves &gt;= 6)
    {
        trophy.sprite_index = sSilverTrophy;
    }
    else
    {
        trophy.sprite_index = sBronzeTrophy;
    }
}

if (global.scoresStart == 1)
{
    oPlayer1.x = 32+8;
    oPlayer1.y = 48+8;
}
else if (global.scoresStart == 2)
{
    oPlayer1.x = 64+8;
    oPlayer1.y = 80+8;
}
else if (global.scoresStart == 3)
{
    oPlayer1.x = 32+8;
    oPlayer1.y = 112+8;
}

if (global.newMoney) instance_create(272, 48, oNew);
if (global.newKills) instance_create(272, 64, oNew);
if (global.newSaves) instance_create(272, 80, oNew);
if (global.newTime) instance_create(272, 96, oNew);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// shake the screen
if (global.shake &gt; 0)
{
    //view_xview[0] = view_xview[0] + rand(0,3) - rand(0,3);
    //view_yview[0] = view_yview[0] + rand(0,3) - rand(0,3);
    //if (view_yview[0] &gt; 16) view_yview[0] = 16 - rand(0,8);
    //if (view_yview[0] &lt; 0) view_yview[0] = 0 + rand(0,8);
    if (shakeToggle) view_yview[0] = view_yview[0] + rand(1,8);
    else view_yview[0] = 0;
    shakeToggle = not shakeToggle;
    global.shake -= 1;
}
else
{
    view_xview[0] = 0;
    view_yview[0] = 0;
}</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ini_open("spelunky.ini")

if (oPlayer1.y &lt; 156)
{
    draw_set_font(global.myFontSmall);
    draw_set_color(c_yellow);
    draw_text(128+16, 32, "SECRET CHALLENGES");
    draw_set_color(c_white);
    tMini1 = floor(ini_read_real("highscore","value10",0) / 10000);
    tMini2 = floor((ini_read_real("highscore","value10",0)-(tMini1*10000)) / 100);
    tMini3 = floor(ini_read_real("highscore","value10",0)-(tMini1*10000)-(tMini2*100));
    draw_text(128, 48, "SUN:   " + string(tMini1));
    draw_text(128, 64, "MOON:  " + string(tMini2));
    draw_text(128, 80, "STARS: " + string(tMini3));
    
    if (oPlayer1.y &lt; 48+16)
    {
        draw_set_color(c_yellow);
        draw_text(168, 96, "SUN ROOM");
        draw_set_color(c_white);
        if (tMoney &gt;= sunGold)
        {
            if (false) // (global.isTunnelMan)
            {
                draw_text(128, 112, "NO MATTOCKS ALLOWED!");
                draw_text(128, 128, "THIS MEANS YOU!");
                draw_text(128, 144, "");
                draw_text(128, 160, "");
            }
            else
            {
                draw_text(128, 112, "KEEP YOURSELF AND");
                draw_text(128, 128, "THE DAMSEL ALIVE");
                draw_text(128, 144, "FOR AS LONG AS");
                draw_text(128, 160, "POSSIBLE!");
            }
        }
        else
        {
            draw_text(128, 112, "LOCKED.");
        }
    }
    else if (oPlayer1.y &lt; 80+16)
    {
        draw_set_color(c_yellow);
        draw_text(168, 96, "MOON ROOM");
        draw_set_color(c_white);
        if (tTime &gt; 0 and tTime &lt;= moonGold)
        {
            if (false) // (global.isTunnelMan)
            {
                draw_text(128, 112, "NO MATTOCKS ALLOWED!");
                draw_text(128, 128, "THIS MEANS YOU!");
                draw_text(128, 144, "");
                draw_text(128, 160, "");
            }
            else
            {
                draw_text(128, 112, "SHOOT THE MOVING");
                draw_text(128, 128, "TARGETS WITH YOUR");
                draw_text(128, 144, "BOW AND ARROWS!");
            }
        }
        else
        {
            draw_text(128, 112, "LOCKED.");
        }
    }
    else if (oPlayer1.y &lt; 112+16)
    {
        draw_set_color(c_yellow);
        draw_text(168, 96, "STARS ROOM");
        draw_set_color(c_white);
        if (tKills &gt;= starsGold)
        {
            if (false) // (global.isTunnelMan)
            {
                draw_text(128, 112, "NO MATTOCKS ALLOWED!");
                draw_text(128, 128, "THIS MEANS YOU!");
                draw_text(128, 144, "");
                draw_text(128, 160, "");
            }
            else
            {
                draw_text(128, 112, "KILL AS MANY ANGRY");
                draw_text(128, 128, "SHOPKEEPS AS YOU CAN");
                draw_text(128, 144, "BEFORE THEY GET YOU!");
            }
        }
        else
        {
            draw_text(128, 112, "LOCKED.");
        }
    }
    else if (oPlayer1.y &lt; 160)
    {
        draw_set_color(c_yellow);
        draw_text(160, 96, "CHANGING ROOM");
        draw_set_color(c_white);
        if (tSaves &gt;= 8)
        {
            draw_text(128, 112, "LADY IN RED...");
        }
        else
        {
            draw_text(128, 112, "LOCKED.");
        }
        with oNew
        {
            visible = false;
        }
    }
    
}
else
{
with oNew
{
    visible = true;
}
draw_set_font(global.myFontSmall);
draw_set_color(c_yellow);
draw_text(160, 32, "TOP DEFILERS");
draw_set_color(c_white);
draw_text(128, 48, "MONEY:  " + string(ini_read_real("highscore","value1",0)-0));
draw_text(128, 64, "KILLS:  " + string(ini_read_real("highscore","value3",0)-0));
draw_text(128, 80, "SAVES:  " + string(ini_read_real("highscore","value4",0)-0));
// only display time if won
if (ini_read_real("highscore","value6",0)-0 &gt; 0)
{
    s = ini_read_real("highscore","value2",0)-0;
    // s = floor(s / 1000);
    m = 0;
    while (s &gt; 59)
    {
        s -= 60;
        m += 1;
    }
    
    draw_set_color(c_white);
    draw_text(128, 96, "TIME: ");
    if (s &lt; 10) draw_text(128+64, 96, string(m) + ":0" + string(s));
    else draw_text(128+64, 96, string(m) + ":" + string(s));
}
draw_set_color(c_yellow);
draw_text(168, 112, "STATISTICS");
draw_set_color(c_white);
draw_text(128, 128, "PLAYS:  " + string(ini_read_real("highscore","value5",0)-0));
draw_text(128, 144, "DEATHS: " + string(ini_read_real("highscore","value7",0)-0));
draw_text(128, 160, "WINS:   " + string(ini_read_real("highscore","value6",0)-0));

block = instance_nearest(160, 240, oPushBlock);
if (not oButtonHighscore.pushed and block.x &gt; 160)
{
    draw_set_font(global.myFontSmall);
    draw_set_color(c_yellow);
    strLen = string_length("THIS WILL CLEAR EVERYTHING!")*8;
    n = 320 - strLen;
    n = ceil(n / 2);
    draw_text(n, 216, string("THIS WILL CLEAR EVERYTHING!"));
}}


ini_close()
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
