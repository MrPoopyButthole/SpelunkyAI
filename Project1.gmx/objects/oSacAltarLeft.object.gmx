<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sSacAltarLeft</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>110</depth>
  <persistent>0</persistent>
  <parentName>oSolid</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>defile = true;
type = "Altar";</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (not cleanDeath and not global.cleanSolids)
{
    rubble = instance_create(x+8+rand(0,8)-rand(0,8), y+8+rand(0,8)-rand(0,8), oRubble);
    rubble.sprite_index = sRubbleTan;
    rubble = instance_create(x+8+rand(0,8)-rand(0,8), y+8+rand(0,8)-rand(0,8), oRubbleSmall);
    rubble.sprite_index = sRubbleTanSmall;
    rubble = instance_create(x+8+rand(0,8)-rand(0,8), y+8+rand(0,8)-rand(0,8), oRubbleSmall);
    rubble.sprite_index = sRubbleTanSmall;
}

if (defile)
{

    global.message = "YOU DARE DEFILE MY ALTAR?";
    global.message2 = "I WILL PUNISH YOU!";
    global.messageTimer = 200;
    scrShake(10);
    global.favor -= 16;
    
    if (global.kaliPunish == 0)
    {
        with oKaliHead
        {
            alarm[0] = 1;
        }
    }
    else if (global.kaliPunish == 1)
    {
        instance_create(oPlayer1.x, oPlayer1.y, oBall);
        obj = instance_create(oPlayer1.x, oPlayer1.y, oChain);
        obj.linkVal = 1;
        obj = instance_create(oPlayer1.x, oPlayer1.y, oChain);
        obj.linkVal = 2;
        obj = instance_create(oPlayer1.x, oPlayer1.y, oChain);
        obj.linkVal = 3;
        obj = instance_create(oPlayer1.x, oPlayer1.y, oChain);
        obj.linkVal = 4;
    }
    else
    {
        if (global.darkLevel and global.ghostExists)
        {
            with oKaliHead
            {
                alarm[0] = 1;
            }
        }
        else
        {
            global.darkLevel = true;
            if (not global.ghostExists)
            {
                if (oPlayer1.x &gt; room_width / 2) instance_create(view_xview[0]+view_wview[0]+8, view_yview[0]+floor(view_hview[0] / 2), oGhost);
                else instance_create(view_xview[0]-32,  view_yview[0]+floor(view_hview[0] / 2), oGhost);
                global.ghostExists = true;
            }
        }
    }

    global.kaliPunish += 1;

    with oSacAltarLeft
    {
        defile = false;
        instance_destroy();
    }
}</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if ((x &gt; view_xview[0]-20 and x &lt; view_xview[0] + view_wview[0]+4 and
        y &gt; view_yview[0]-20 and y &lt; view_yview[0] + view_hview[0]+4))
{
    if (not collision_point(x, y+16, oSolid, 0, 0)) instance_destroy();
}</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
