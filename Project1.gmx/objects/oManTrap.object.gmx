<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sManTrapLeft</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>60</depth>
  <persistent>0</persistent>
  <parentName>oEnemy</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>makeActive();
setCollisionBounds(2, 0, sprite_width-2, sprite_height);
xVel = 2.5;
image_speed = 0.5;

// stats
type = "ManTrap";
hp = 3;
invincible = 0;
favor = 2;

IDLE = 0;
WALK = 1;
ATTACK = 2;
SLEEPY = 96;
EATING = 97;
STUNNED = 98;
DEAD = 99;
status = IDLE;

ateShopkeeper = false;

bounced = false;
dead = false;
counter = 0;

LEFT = 0;
RIGHT = 1;
facing = RIGHT;

shakeCounter = 0;
shakeToggle = 1;</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if ((x &gt; view_xview[0]-20 and x &lt; view_xview[0] + view_wview[0]+4 and
        y &gt; view_yview[0]-20 and y &lt; view_yview[0] + view_hview[0]+4))
{
moveTo(xVel,yVel);

if (not held) yVel += myGrav;
if (yVel &gt; yVelLimit) yVel = yVelLimit;

colLeft = false;
colRight = false;
colBot = false;
colTop = false;
if (isCollisionLeft(1)) colLeft = true;
if (isCollisionRight(1)) colRight = true;
if (isCollisionBottom(1)) colBot = true;
if (isCollisionTop(1)) colTop = true;

if (hp &lt; 1)
{
    if (countsAsKill)
    {
        if (isRealLevel()) global.enemyKills[10] += 1;
        global.mantraps += 1;
        global.kills += 1;
    }
    repeat(3) { instance_create(x+rand(0,16), y-8+rand(0,16), oLeaf); }
    scrCreateBlood(x+8, y+8, 1);
    if (ateShopkeeper)
    {
        obj = instance_create(x, y, oShopkeeper);
        obj.status = 2;
        obj.hasGun = false;
        repeat(3) { instance_create(x+rand(0,16), y-8+rand(0,16), oLeaf); }
        scrCreateBlood(x+8, y+8, 1);
        playSound(global.sndSmallExplode);
    }
    instance_destroy();
}

if (isCollisionBottom(1) and status != STUNNED) yVel = 0;

if (status == IDLE)
{
    if (counter &gt; 0) counter -= 1;
    if (counter == 0)
    {
        facing = rand(0,1);
        status = WALK;
    }
}
else if (status == WALK)
{
    if (isCollisionLeft(1) or isCollisionRight(1))
    {
        if (facing == LEFT) facing = RIGHT;
        else facing = LEFT;
    }
    if (facing == LEFT and not collision_point(x-1, y, oSolid, -1, -1) and
        not collision_point(x-1, y+16, oSolid, -1, -1))
    {
        facing = RIGHT;
    }
    else if (facing == RIGHT and not collision_point(x+16, y, oSolid, -1, -1) and
             not collision_point(x+16, y+16, oSolid, -1, -1))
    {
        facing = LEFT;
    }
    if ((not collision_point(x-1, y+16, oSolid, -1, -1) or collision_point(x-1, y, oSolid, -1, -1)) and
        (not collision_point(x+16, y+16, oSolid, -1, -1) or collision_point(x+16, y, oSolid, -1, -1)))
    {
        if (collision_point(x-1, y, oSolid, -1, -1)) facing = RIGHT
        else facing = LEFT;
        xVel = 0;
    }
    else if (facing == LEFT) xVel = -1;
    else xVel = 1;
    
    if (rand(1,100) == 1)
    {
        status = IDLE;
        counter = rand(20,50);
        xVel = 0;
    }
}
else if (status == STUNNED)
{
    // xVel = 0;
    /*
    if (counter &gt; 0) counter -= 1;
    else
    {
        status = IDLE;
        counter = rand(20,50);
    }
    */
    sprite_index = sManTrapStunL;

    if (colBot and not bounced)
    {
        bounced = true;
        scrCreateBlood(x+8, y+8, 1);
    }
    
    if (held or colBot)
    {      
        if (counter &gt; 0) counter -= 1;
        else
        {
            if (ateShopkeeper)
            {
                obj = instance_create(x, y, oShopkeeper);
                obj.status = 2;
                obj.hasGun = false;
                repeat(3) { instance_create(x+rand(0,16), y-8+rand(0,16), oLeaf); }
                scrCreateBlood(x+8, y+8, 1);
                playSound(global.sndSmallExplode);
                instance_destroy();
            }
            else if (hp &gt; 0)
            {
                status = IDLE;
                counter = rand(20,50);
                if (held)
                {
                    held = false;
                    // trap can get stuck in wall at this point:
                    if (collision_point(x+16, y+8, oSolid, 0, 0)) x = oPlayer1.x - 12;
                    else if (collision_point(x, y+8, oSolid, 0, 0)) x = oPlayer1.x - 4;
                    y = oPlayer1.y - 8;
                    with oPlayer1 { holdItem = 0; pickupItemType = ""; }
                }
            }
        }
    }
}

if (status &gt;= STUNNED)
{
    scrCheckCollisions();
}

// friction
if (colBot)
{
    if (abs(xVel) &lt; 0.1) xVel = 0;
    else if (abs(xVel) != 0) xVel *= 0.3;
}

if (isCollisionSolid()) y -= 2;

if (status == EATING and image_index == 8)
{
    scrCreateBlood(x+8, y, 1);
}

if (status == SLEEPY and image_index == 6 and rand(1,8) == 1)
{
    if (facing == LEFT)
    {
        bone = instance_create(x+2, y+4, oBone);
        with bone { xVel = -2; }
    }
    else
    {
        bone = instance_create(x+14, y+4, oBone);
        with bone { xVel = 2; }
    }
}

if (status &lt; SLEEPY)
{
    sprite_index = sManTrapLeft;
}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="oShopkeeper">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (status != STUNNED and status != EATING)
{
    xVel = 0;
    status = EATING;
    if (other.x &gt; x) facing = RIGHT;
    else facing = LEFT;
    sprite_index = sManTrapEatShopkeeperL;
    if (other.hp &gt; 0) ateShopkeeper = true;
    
    with other
    {
        if (hasGun)
        {
            obj = instance_create(x+8, y+8, oShotgun);
            obj.yVel = rand(4,6);
            if (xVel &lt; 0) obj.xVel = -1 * rand(4,6);
            else obj.xVel = rand(4,6);
            obj.cost = 0;
            obj.forSale = false;
            hasGun = false;
        }
        instance_destroy();
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="oDamsel">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (status != STUNNED and status != EATING)
{
    xVel = 0;
    status = EATING;
    if (other.x &gt; x) facing = RIGHT;
    else facing = LEFT;
    sprite_index = sManTrapEatDamselL;
        
    with other
    {
        if (held)
        {
            oPlayer1.holdItem = 0;
            oPlayer1.pickupItemType = "";
        }
        instance_destroy();
    }
}</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="oWhipPre">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (status != STUNNED)
{
    if (other.type == "Machete")
    {
        hp -= other.damage*2;
    }
    else
    {
        hp -= other.damage;
    }
    countsAsKill = true;
    status = STUNNED;
    counter = stunTime;
    yVel = -3;
    if (other.x &lt; (x+8)) xVel = 2;
    else xVel = -2;
    image_speed = 0.5;
    instance_create(x+rand(0,16), y-8+rand(0,16), oLeaf);
    playSound(global.sndHit);
}</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="oWhip">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (status != STUNNED)
{
    if (other.type == "Machete")
    {
        hp -= other.damage*2;
    }
    else
    {
        hp -= other.damage;
    }
    countsAsKill = true;
    status = STUNNED;
    counter = stunTime;
    yVel = -3;
    if (other.x &lt; (x+8)) xVel = 2;
    else xVel = -2;
    image_speed = 0.5;
    instance_create(x+rand(0,16), y-8+rand(0,16), oLeaf);
    playSound(global.sndHit);
}</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="oCaveman">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (status != STUNNED and status != EATING)
{
    xVel = 0;
    status = EATING;
    if (other.x &gt; x) facing = RIGHT;
    else facing = LEFT;
    sprite_index = sManTrapEatCavemanL;
        
    with other { instance_destroy(); }
}</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="oCharacter">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (abs(other.x-(x+8)) &gt; 8)
{
    // do nothing
}
else if ((global.hasSpikeShoes or status == EATING) and not other.dead and not other.stunned and (other.state == 15 or other.state == 16) and other.y &lt; y+5 and not other.swimming)
{
    other.yVel=-6-0.2*other.yVel
    if (global.hasSpikeShoes) { hp -= (3 * (floor(other.fallTimer/16)+1)); if (not bloodless) instance_create(other.x, other.y+8, oBlood); }
    else hp -= (1 * (floor(other.fallTimer/16)+1));
    other.fallTimer = 0;
    countsAsKill = true;
    status = STUNNED;
    counter = stunTime;
    yVel = -6;
    if (other.x &lt; x+8) xVel += 1;
    else xVel -= 1;
    image_speed = 0.5;
    playSound(global.sndHit);
}
else if (other.visible and other.invincible == 0)
{
    if (status != STUNNED and status != EATING)
    {
        xVel = 0;
        status = EATING;
        if (other.x &gt; x+8) facing = RIGHT;
        else facing = LEFT;
        if (global.isDamsel)
        {
            sprite_index = sManTrapEatDamselL;
        }
        else if (global.isTunnelMan)
        {
            sprite_index = sManTrapEatTunnelL;
        }
        else
        {
            sprite_index = sManTrapEatL;
        }
        
        other.visible = false;
        other.invincible = 9999;
        other.bounced = true;
        global.plife = -99;
        playSound(global.sndDie);
        global.drawHUD = false;
        if (isRealLevel()) global.enemyDeaths[10] += 1;
                
        if (other.holdItem)
        {
            if (held) held = false;
            else
            {
                other.holdItem.held = false;
                if (facing == LEFT) other.holdItem.xVel = -2;
                else other.holdItem.xVel = 2;
                other.holdItem.yVel = -4;
            }
            other.holdItem = 0;
            other.pickupItemType = "";
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (status == EATING)
{
    sprite_index = sManTrapSleepL;
    status = SLEEPY;
}
else if (sprite_index == sManTrapSleepL)
{
    sprite_index = sManTrapStunL;
    status = STUNNED;
    counter = stunTime*2;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
