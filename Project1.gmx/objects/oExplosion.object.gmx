<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sExplosion</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>1</depth>
  <persistent>0</persistent>
  <parentName>oDrawnSprite</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_speed</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0.8</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>playSound(global.sndExplosion);
scrShake(5);</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="oDamsel">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (not other.invincible)
{
    other.hp -= 100;
    if (x &lt; other.x) other.xVel = rand(4,6);
    else other.xVel = -rand(4,6);
    other.yVel = -6;
    other.burning = 50;
    other.status = 2;
}</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="oBoulder">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>for (i = 0; i &lt; 3; i += 1)
{
    rubble = instance_create(other.x+rand(0,15)-rand(0,15), other.y+rand(0,15)-rand(0,15), oRubble);
    rubble.sprite_index = sRubbleTan;
    if (rand(1,3) == 1) instance_create(other.x+rand(0,15)-rand(0,15), other.y+rand(0,15)-rand(0,15), oRock);
}
for (i = 0; i &lt; 6; i += 1)
{
    rubble = instance_create(other.x+rand(0,15)-rand(0,15), other.y+rand(0,15)-rand(0,15), oRubbleSmall);
    rubble.sprite_index = sRubbleTanSmall;
}

with other { instance_destroy(); }</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="oWeb">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with other { instance_destroy(); }</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="oBarrierEmitter">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with other { instance_destroy(); }</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="oItem">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (other.type == "Arrow" or other.type == "Fish Bone" or
    other.type == "Jar" or other.type == "Skull")
{
    with other { instance_destroy(); }
}
else if (other.type == "Bomb")
{
    with other
    {
        sprite_index = sBombArmed;
        image_speed = 1;
        alarm[1] = rand(4,8);
        enemyID = 0;
    }

    if (other.y &lt; y) other.yVel = -rand(2,4);
    if (other.x &lt; x) other.xVel = -rand(2,4);
    else other.xVel = rand(2,4);
}
else if (other.type == "Rope")
{
    if (not other.falling)
    {
        if (other.y &lt; y) other.yVel -= 6;
        else other.yVel += 6;
        if (x &gt; other.x) other.xVel -= rand(4,6);
        else other.xVel += rand(4,6);
    }
}
else
{
    if (other.y &lt; y) other.yVel -= 6;
    else other.yVel += 6;
    if (x &gt; other.x) other.xVel -= rand(4,6);
    else other.xVel += rand(4,6);
}

if (other.held)
{
    with oPlayer1
    {
        holdItem = 0;
        pickupItemType = "";
    }
    other.held = false;
}</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="oSolid">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (isLevel("rTutorial") or (x &gt; view_xview[0]-16 and x &lt; view_xview[0] + view_wview[0]+16 and
     y &gt; view_yview[0]-16 and y &lt; view_yview[0] + view_hview[0]+16))
{
    with other
    {
        repeat (2)
        {
            tile = tile_layer_find(3, x+1, y-1);
            if (tile &gt; 0) tile_delete(tile);
        }
        tile = tile_layer_find(3, x+1, y+16);
        if (tile) tile_delete(tile);
    
        if (not invincible) instance_destroy();
    }

    with oTreasure
    {
        state = 1;
    }

    with oSpikes
    {
        if (not collision_point(x, y+16, oSolid, 0, 0))
        {
            instance_destroy();
        }
    }

//global.checkWater = true;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="oEnemy">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (other.type == "Magma Man")
{
    with other
    {
        flame = instance_create(x+8, y-4, oMagma);
        flame.yVel = -rand(1,3);
        flame = instance_create(x+8, y-4, oMagma);
        flame.yVel = -rand(1,3);
        instance_destroy();
    }
}
else if (not other.invincible)
{
    other.hp -= 30;
    if (x &lt; other.x) other.xVel = rand(4,6);
    else other.xVel = -rand(4,6);
    other.yVel = -6;
    other.burning = 50;
}</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>203</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_kill_object</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
