<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sRunLeft</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>50</depth>
  <persistent>0</persistent>
  <parentName>oDrawnSprite</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// dummy actor for transitions and ending

TRANSITION = 0;
START = 1;
END = 2;
LAVA = 3;
STOPPED = 99;
status = 0;

yVel = 0;

if (global.isDamsel) sprite_index = sDamselRunL;
else if (global.isTunnelMan) sprite_index = sTunnelRunL;
else sprite_index = sRunLeft;

LEFT = 0;
RIGHT = 1;
facing = RIGHT;</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>status = TRANSITION;
if (global.isDamsel) sprite_index = sDamselRunL;
else if (global.isTunnelMan) sprite_index = sTunnelRunL;
else sprite_index = sRunLeft;</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (oLavaSpray) oLavaSpray.yAcc = -0.1;</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_create(oEndPlat.x, oEndPlat.y+30, oLavaSpray);
global.shake = 9999;
alarm[4] = 10;</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>status = LAVA;</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>oBigChest.sprite_index = sBigChestOpen;
treasure = instance_create(oBigChest.x, oBigChest.y, oBigTreasure);
treasure.yVel = -4;
treasure.xVel = -3;
playSound(global.sndClick);
alarm[2] = 20;</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>alarm[1] = 100;</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>y += yVel;

if (status != STOPPED and collision_point(x+8, y, oDamselKiss, 0, 0))
{
    person = instance_nearest(x+8, y, oDamselKiss);
    if (not person.kissed)
    {
        status = STOPPED;
        xVel = 0;
        yVel = 0;
        if (global.isDamsel) sprite_index = sDamselLeft;
        else if (global.isTunnelMan) sprite_index = sTunnelLeft;
        else sprite_index = sStandLeft;
    
        with person
        {
            if (global.isDamsel) sprite_index = sPKissL;
            else sprite_index = sDamselKissL;
        }
        alarm[5] = 30;
    }
}

if (instance_exists(oTunnelMan))
{
    person = instance_nearest(x+8, y, oTunnelMan);
    if (status != STOPPED and collision_point(x+8, y, oTunnelMan, 0, 0) and person.talk == 0)
    {
        status = STOPPED;
        xVel = 0;
        yVel = 0;
        if (global.isDamsel) sprite_index = sDamselLeft;
        else if (global.isTunnelMan) sprite_index = sTunnelLeft;
        else sprite_index = sStandLeft;
    
        with person
        {
            talk = 1;
        }
    }
}

if (status == TRANSITION)
{
    if (x &gt;= 280)
    {
        if (sprite_index != sPExit and sprite_index != sDamselExit and sprite_index != sTunnelExit)
        {
            playSound(global.sndSteps);
            if (global.isDamsel) sprite_index = sDamselExit;
            else if (global.isTunnelMan) sprite_index = sTunnelExit;
            else sprite_index = sPExit;
        }
    }
    else x += 2;
}
else if (status == END and sprite_index != sStandLeft and sprite_index != sDamselLeft and sprite_index != sTunnelLeft)
{
    if (x &gt;= 448 + 8)
    {
        // stop
        if (global.isDamsel) sprite_index = sDamselLeft;
        else if (global.isTunnelMan) sprite_index = sTunnelLeft;
        else sprite_index = sStandLeft;
        alarm[0] = 20;
    }
    else x += 2;
}
else if (status == LAVA)
{
    alarm[3] = 50;
    status += 1;
}
else if (status == LAVA+1)
{
    instance_create(oEndPlat.x+rand(0,80), 192+32, oBurn)
}</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (sprite_index == sPExit or sprite_index == sDamselExit or sprite_index == sTunnelExit)
{
    instance_destroy();
}
/*
if (false and sprite_index == sPExit)
{
    global.gameStart = true;
    if (global.levelType == 2) room_goto(rLevel2);
    else if (global.currLevel == 2) room_goto(rOlmec);
    else room_goto(rLevel);
}
*/</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (facing == RIGHT) image_xscale = -1;
else image_xscale = 1;

if ((sprite_index == sPExit or sprite_index == sDamselExit or sprite_index == sTunnelExit) and global.hasJetpack)
{
    draw_sprite_ext(sprite_index, -1, x, y, image_xscale, image_yscale, image_angle, image_blend, image_alpha);
    draw_sprite(sJetpackBack,-1,x,y);
}
else if (sprite_index == sPExit or sprite_index == sDamselExit or sprite_index == sTunnelExit)
{
    draw_sprite_ext(sprite_index, -1, x, y, image_xscale, image_yscale, image_angle, image_blend, image_alpha);
}
else if (global.hasJetpack)
{
    draw_sprite(sJetpackRight,-1,x-4,y-1);
}

if (sprite_index != sPExit and sprite_index != sDamselExit and sprite_index != sTunnelExit)
{
    draw_sprite_ext(sprite_index, -1, x, y, image_xscale, image_yscale, image_angle, image_blend, image_alpha);
    if (global.pickupItem == "Rock") holdItem = draw_sprite(sRock,-1,x+4,y+2);
    else if (global.pickupItem == "Jar") holdItem = draw_sprite(sJar,-1,x+4,y+2);
    else if (global.pickupItem == "Skull") holdItem = draw_sprite(sSkull,-1,x+4,y+2);
    else if (global.pickupItem == "Fish Bone") holdItem = draw_sprite(sFishBone,-1,x+4,y+2);
    else if (global.pickupItem == "Arrow") holdItem = draw_sprite(sArrowRight,-1,x+4,y+2);
    else if (global.pickupItem == "Rock") holdItem = draw_sprite(sRock,-1,x+4,y+2);
    else if (global.pickupItem == "Machete") holdItem = draw_sprite(sMacheteRight,-1,x+4,y+2);
    else if (global.pickupItem == "Mattock") holdItem = draw_sprite(sMattockRight,-1,x+4,y+2);
    else if (global.pickupItem == "Mattock Head") holdItem = draw_sprite(sMattockHead,-1,x+4,y+2);
    else if (global.pickupItem == "Pistol") holdItem = draw_sprite(sPistolRight,-1,x+4,y+2);
    else if (global.pickupItem == "Web Cannon") holdItem = draw_sprite(sWebCannonR,-1,x+4,y+2);
    else if (global.pickupItem == "Teleporter") holdItem = draw_sprite(sTeleporter,-1,x+4,y+2);
    else if (global.pickupItem == "Shotgun") holdItem = draw_sprite(sShotgunRight,-1,x+4,y+2);
    else if (global.pickupItem == "Bow") holdItem = draw_sprite(sBowRight,-1,x+4,y+2);
    else if (global.pickupItem == "Flare") holdItem = draw_sprite(sFlare,-1,x+4,y+2);
    else if (global.pickupItem == "Sceptre") holdItem = draw_sprite(sSceptreRight,-1,x+4,y+2);
    else if (global.pickupItem == "Key") holdItem = draw_sprite(sKeyRight,-1,x+4,y+2);
}</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
