<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sTunnelManLeft</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>100</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>talk = 0;
donate = 0;
upCounter = 0;
downCounter = 0;
upHeld = 0;
downHeld = 0;

if (isRoom("rTitle")) sprite_index = sTunnelManRight;</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (checkAttackPressed())
{
if (talk == 1) talk = 2;
else if (talk == 2)
{
    if (isRoom("rTransition1x") or isRoom("rTransition3x"))
    {
        if (donate &gt; 0)
        {
            if (donate &gt;= global.tunnel1) talk = 5;
            else talk = 3;
    
            global.money -= donate;
            global.tunnel1 -= donate;
        }
        else talk = 4;
    }
    else
    {
        if (donate &gt; 0)
        {
            if (donate &gt;= global.tunnel2)
            {
                global.tunnel1 = global.tunnel3Max + 1;
                talk = 5;
            }
            else talk = 3;
    
            global.money -= donate;
            global.tunnel2 -= donate;
        }
        else talk = 4;
    }
    
    with oPDummy
    {
        status = TRANSITION;
        if (global.isDamsel) sprite_index = sDamselRunL;
        else sprite_index = sRunLeft;
    }
}}

if (talk == 2)
{
if (checkUp())
{
    upHeld += 1;
    downHeld = 0;

    if (upCounter &lt; 20) upCounter += 1;
    else
    {
        if (upHeld &gt; 100) donate += 1000;
        else donate += 100;
    }
    if (donate &gt; global.money) donate = global.money;
    if (isRoom("rTransition1x") or isRoom("rTransition3x")) { if (donate &gt; global.tunnel1) donate = global.tunnel1; }
    else { if (donate &gt; global.tunnel2) donate = global.tunnel2; }
    downCounter = 0;
}
else if (checkDown())
{
    downHeld += 1;
    upHeld = 0;

    if (downCounter &lt; 20) downCounter += 1;
    else
    {
        if (downHeld &gt; 100) donate -= 1000;
        else donate -= 100;
    }
    if (donate &lt; 0) donate = 0;
    upCounter = 0;
}
else
{
    upCounter = 0;
    downCounter = 0;
    
    upHeld = 0;
    downHeld = 0;
}
}</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
