<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sUFO</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>40</depth>
  <persistent>0</persistent>
  <parentName>oEnemy</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>type = "UFO";
image_speed = 0.5;
setCollisionBounds(4, 2, 12, 14);
origX = 0;
origY = 0;
xVel = 0;
yVel = 0;
xAcc = 0.2;
yAcc = 0.2;

// stats
hp = 1;
invincible = 0;
flying = true;

// status
SEARCH = 0;
DESTROY = 1;
BLAST = 2;

status = SEARCH;
alerted = false;

shift = 0;
shiftToggle = rand(0,1);

shakeCounter = 0;
shakeToggle = 1;</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if ((x &gt; view_xview[0]-20 and x &lt; view_xview[0] + view_wview[0]+4 and
        y &gt; view_yview[0]-20 and y &lt; view_yview[0] + view_hview[0]+4))
{
moveTo(xVel, yVel);

if (hp &lt; 1)
{
    instance_create(x, y, oUFOCrash);
    if (countsAsKill)
    {
        if (isRealLevel()) global.enemyKills[16] += 1;
        global.ufos += 1;
        global.kills += 1;
    }
    instance_destroy();
}

dir = 0;
dist = point_distance(x, y, oCharacter.x, oCharacter.y);
if (dist &lt; 160 and not alerted)
{
    alerted = true;
    playSound(global.sndAlien);
}

if (status == DESTROY)
{
    yVel = 0;
    if (shiftToggle == 0) // right
    {
        xVel = 1;
        shift += 1;
        if (shift &gt;= 64)
        {
            shiftToggle = 1;
        }
    }
    else
    {
        xVel = -1;
        shift -= 1;
        if (shift &lt;= -64)
        {
            shiftToggle = 0;
        }
    }
    
    if (isCollisionLeft(1))
    {
        x += 1;
        shiftToggle = 0;
        shift = -64;
    }
    
    if (isCollisionRight(1))
    {
        x -= 1;
        shiftToggle = 1;
        shift = 64;
    }
    
    if (abs(oCharacter.x - (x+8)) &lt; 8)
    {
        status = BLAST;
        playSound(global.sndLaserCharge);
    }
    
    if (oPlayer1.y &lt; y or y &lt; oPlayer1.y-96) status = SEARCH;
}
else if (status = BLAST)
{
    xVel = 0;
    yVel = 0;
    sprite_index = sUFOBlast;
    if (image_index == 16)
    {
        instance_create(x+8, y+16, oLaser);
        playSound(global.sndLaser);
    }
}
else if (instance_exists(oCharacter) and not oCharacter.swimming and not oCharacter.dead)
{
    if (y &gt; oCharacter.y - 48)
    {
        if (yVel == 2) status = DESTROY;
        yVel = -2;
        //if (isCollisionTop(1)) y += 2;
    }
    else
    {
        if (yVel == -2) status = DESTROY;
        yVel = 2;
        //if (isCollisionBottom(1)) y -= 2;
    }

    if (shiftToggle == 0) // right
    {
        xVel = 1;
        shift += 1;
        if (shift &gt;= 32)
        {
            shiftToggle = 1;
            if (oCharacter.x &gt; x) shift = 0;
        }
    }
    else
    {
        xVel = -1;
        shift -= 1;
        if (shift &lt;= -32)
        {
            shiftToggle = 0;
            if (oCharacter.x &lt; x) shift = 0;
        }
    }
    
    if (isCollisionLeft(1))
    {
        x += 1;
        shiftToggle = 0;
        shift = -32;
    }
    
    if (isCollisionRight(1))
    {
        x -= 1;
        shiftToggle = 1;
        shift = 32;
    }
}
}</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (sprite_index = sUFOBlast)
{
    status = DESTROY;
    sprite_index = sUFO;
}</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
